# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@




VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@WANT_ANDROID_FALSE@am__append_1 = APs emacs_mode sql workspaces

# depending on HAVE_GTK3 we want either Plot_gtk.cc or Plot_xcb.cc compiled,
# but keep both source files in the tar file (hence EXTRA_apl_SOURCES).
#
@HAVE_GTK3_TRUE@am__append_2 = Gtk
@HAVE_LIBPCRE2_32_TRUE@am__append_3 = Regexp.cc					Regexp.hh
@SQLITE3_TRUE@am__append_4 = $(SQLITE3_CFLAGS)
@SQLITE3_TRUE@am__append_5 = $(SQLITE3_LDFLAGS)
@SQLITE3_TRUE@am__append_6 = sql/SqliteArgListBuilder.cc \
@SQLITE3_TRUE@	sql/SqliteArgListBuilder.hh \
@SQLITE3_TRUE@	sql/SqliteConnection.cc sql/SqliteConnection.hh \
@SQLITE3_TRUE@	sql/SqliteResultValue.cc \
@SQLITE3_TRUE@	sql/SqliteResultValue.hh sql/SqliteProvider.cc \
@SQLITE3_TRUE@	sql/SqliteProvider.hh sql/Connection.cc
@POSTGRES_TRUE@@SQLITE3_FALSE@am__append_7 = sql/Connection.cc
@POSTGRES_TRUE@am__append_8 = $(POSTGRESQL_CFLAGS)
@POSTGRES_TRUE@am__append_9 = $(POSTGRESQL_LDFLAGS)
@POSTGRES_TRUE@am__append_10 = sql/PostgresArgListBuilder.cc \
@POSTGRES_TRUE@	sql/PostgresArgListBuilder.hh \
@POSTGRES_TRUE@	sql/PostgresConnection.cc \
@POSTGRES_TRUE@	sql/PostgresConnection.hh \
@POSTGRES_TRUE@	sql/PostgresProvider.cc sql/PostgresProvider.hh
@WANT_LIBAPL_TRUE@am__append_11 = libapl.la
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@am__append_12 = lib_gnu_apl.la
@WANT_LIBAPL_FALSE@@WANT_PYTHON_FALSE@bin_PROGRAMS = apl$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/depend.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/ax_lib_sqlite3.m4 \
	$(top_srcdir)/m4/ax_lib_postgresql.m4 \
	$(top_srcdir)/m4/ax_path_lib_pcre.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_noinst_DATA) \
	$(am__pkginclude_HEADERS_DIST) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(pkglib_LTLIBRARIES)
lib_gnu_apl_la_LIBADD =
am__lib_gnu_apl_la_SOURCES_DIST = Plot_xcb.cc Plot_gtk.cc \
	../buildtag.hh ../config.h APL_Float_as_class.hh APL_types.hh \
	Archive.cc Archive.hh ArrayIterator.hh Assert.cc Assert.hh \
	Avec.cc Avec.def Avec.hh Backtrace.cc Backtrace.hh \
	Bif_F12_COMMA.cc Bif_F12_COMMA.hh Bif_F12_DOMINO.cc \
	Bif_F12_DOMINO.hh Bif_F12_INDEX_OF.cc Bif_F12_INDEX_OF.hh \
	Bif_F12_INTERVAL_INDEX.cc Bif_F12_INTERVAL_INDEX.hh \
	Bif_F12_FORMAT.cc Bif_F12_FORMAT.hh Bif_F12_PARTITION_PICK.cc \
	Bif_F12_PARTITION_PICK.hh Bif_F12_SORT.cc Bif_F12_SORT.hh \
	Bif_F12_TAKE_DROP.cc Bif_F12_TAKE_DROP.hh Bif_OPER1_COMMUTE.cc \
	Bif_OPER1_COMMUTE.hh Bif_OPER1_EACH.cc Bif_OPER1_EACH.hh \
	Bif_OPER2_POWER.cc Bif_OPER2_POWER.hh Bif_OPER2_INNER.cc \
	Bif_OPER2_INNER.hh Bif_OPER2_OUTER.cc Bif_OPER2_OUTER.hh \
	Bif_OPER2_RANK.cc Bif_OPER2_RANK.hh Bif_OPER1_REDUCE.cc \
	Bif_OPER1_REDUCE.hh Bif_OPER1_SCAN.cc Bif_OPER1_SCAN.hh CDR.cc \
	CDR.hh Cell.cc Cell.icc Cell.hh Doxy.cc Doxy.hh CharCell.cc \
	CharCell.hh Command.cc Command.def Command.hh Common.cc \
	Common.hh ComplexCell.cc ComplexCell.hh DerivedFunction.cc \
	DerivedFunction.hh DiffOut.cc DiffOut.hh DynamicObject.cc \
	DynamicObject.hh Error.cc Error.def Error.hh Error_macros.hh \
	ErrorCode.hh Executable.cc Executable.hh FloatCell.cc \
	FloatCell.hh Function.cc Function.hh Help.def Heapsort.hh \
	Id.cc Id.def Id.hh IdEnums.hh IndexExpr.cc IndexExpr.hh \
	IndexIterator.cc IndexIterator.hh InputFile.cc InputFile.hh \
	IntCell.cc IntCell.hh IO_Files.cc IO_Files.hh LApack.cc \
	LApack.hh LibPaths.cc LibPaths.hh LineInput.cc LineInput.hh \
	Logging.cc Logging.def Logging.hh LvalCell.cc LvalCell.hh \
	Malloc_hooks.cc Nabla.cc Nabla.hh Macro.cc Macro.def Macro.hh \
	Missing_Libraries.cc NamedObject.cc NamedObject.hh \
	NativeFunction.cc NativeFunction.hh Native_interface.hh \
	NumericCell.cc NumericCell.hh Output.cc Output.hh PJob.hh \
	Parallel.cc Parallel.hh Parser.cc Parser.hh Performance.cc \
	Performance.def Performance.hh PointerCell.cc PointerCell.hh \
	Prefix.cc Prefix.def Prefix.hh Plot_line_properties.cc \
	Plot_line_properties.hh Plot_data.cc Plot_data.hh \
	Plot_window_properties.cc Plot_window_properties.hh \
	PrimitiveFunction.cc PrimitiveFunction.hh PrimitiveOperator.cc \
	PrimitiveOperator.hh PrintBuffer.cc PrintBuffer.hh \
	PrintContext.hh PrintOperator.hh QuadFunction.cc \
	QuadFunction.hh ProcessorID.cc ProcessorID.hh Quad_CR.cc \
	Quad_CR.def Quad_CR.hh Quad_DLX.cc Quad_DLX.hh Quad_FFT.cc \
	Quad_FFT.hh Quad_FIO.cc Quad_FIO.def Quad_FIO.hh Quad_FX.cc \
	Quad_FX.hh Quad_GTK.cc Quad_GTK.hh Quad_JSON.cc Quad_JSON.hh \
	Quad_MAP.cc Quad_MAP.hh Quad_PLOT.cc Quad_PLOT.def \
	Quad_PLOT.hh Quad_RE.cc Quad_RE.hh Quad_RL.cc Quad_RL.hh \
	Quad_RVAL.cc Quad_RVAL.hh Quad_SQL.cc Quad_SQL.hh Quad_SVx.cc \
	Quad_SVx.hh Quad_TF.cc Quad_TF.hh Quad_WA.cc Quad_WA.hh \
	Quad_XML.cc Quad_XML.hh RealCell.cc RealCell.hh sbrk.cc \
	Shape.cc Shape.hh ScalarFunction.cc ScalarFunction.hh \
	Security.cc Security.def Security.hh StateIndicator.cc \
	StateIndicator.hh Svar_DB.cc Svar_DB.hh Svar_record.cc \
	Svar_record.hh tcp_signal.m4 Svar_signals.def Svar_signals.hh \
	Symbol.cc Symbol.hh SymbolTable.cc SymbolTable.hh \
	SystemLimits.def SystemLimits.hh SystemVariable.cc \
	SystemVariable.def SystemVariable.hh TabExpansion.cc \
	TabExpansion.hh Thread_context.cc Thread_context.hh Token.cc \
	Token.def Token.hh TokenEnums.hh Tokenizer.cc Tokenizer.hh \
	UCS_string.cc UCS_string.hh UCS_string_vector.cc \
	UCS_string_vector.hh Unicode.hh UserFunction.cc \
	UserFunction.hh UserFunction_header.cc UserFunction_header.hh \
	UserPreferences.cc UserPreferences.hh UTF8_string.cc \
	UTF8_string.hh Value.cc Value.icc Value.hh Value_P.icc \
	Value_P.hh ValueHistory.cc ValueHistory.hh Workspace.cc \
	Workspace.hh static_Objects.cc static_Objects.hh Regexp.cc \
	Regexp.hh sql/SqliteArgListBuilder.cc \
	sql/SqliteArgListBuilder.hh sql/SqliteConnection.cc \
	sql/SqliteConnection.hh sql/SqliteResultValue.cc \
	sql/SqliteResultValue.hh sql/SqliteProvider.cc \
	sql/SqliteProvider.hh sql/Connection.cc \
	sql/PostgresArgListBuilder.cc sql/PostgresArgListBuilder.hh \
	sql/PostgresConnection.cc sql/PostgresConnection.hh \
	sql/PostgresProvider.cc sql/PostgresProvider.hh python_apl.cc
@HAVE_GTK3_FALSE@am__objects_1 = lib_gnu_apl_la-Plot_xcb.lo
@HAVE_GTK3_TRUE@am__objects_1 = lib_gnu_apl_la-Plot_gtk.lo
@HAVE_LIBPCRE2_32_TRUE@am__objects_2 = lib_gnu_apl_la-Regexp.lo
am__dirstamp = $(am__leading_dot)dirstamp
@SQLITE3_TRUE@am__objects_3 =  \
@SQLITE3_TRUE@	sql/lib_gnu_apl_la-SqliteArgListBuilder.lo \
@SQLITE3_TRUE@	sql/lib_gnu_apl_la-SqliteConnection.lo \
@SQLITE3_TRUE@	sql/lib_gnu_apl_la-SqliteResultValue.lo \
@SQLITE3_TRUE@	sql/lib_gnu_apl_la-SqliteProvider.lo \
@SQLITE3_TRUE@	sql/lib_gnu_apl_la-Connection.lo
@POSTGRES_TRUE@@SQLITE3_FALSE@am__objects_4 = sql/lib_gnu_apl_la-Connection.lo
@POSTGRES_TRUE@am__objects_5 =  \
@POSTGRES_TRUE@	sql/lib_gnu_apl_la-PostgresArgListBuilder.lo \
@POSTGRES_TRUE@	sql/lib_gnu_apl_la-PostgresConnection.lo \
@POSTGRES_TRUE@	sql/lib_gnu_apl_la-PostgresProvider.lo
am__objects_6 = $(am__objects_1) lib_gnu_apl_la-Archive.lo \
	lib_gnu_apl_la-Assert.lo lib_gnu_apl_la-Avec.lo \
	lib_gnu_apl_la-Backtrace.lo lib_gnu_apl_la-Bif_F12_COMMA.lo \
	lib_gnu_apl_la-Bif_F12_DOMINO.lo \
	lib_gnu_apl_la-Bif_F12_INDEX_OF.lo \
	lib_gnu_apl_la-Bif_F12_INTERVAL_INDEX.lo \
	lib_gnu_apl_la-Bif_F12_FORMAT.lo \
	lib_gnu_apl_la-Bif_F12_PARTITION_PICK.lo \
	lib_gnu_apl_la-Bif_F12_SORT.lo \
	lib_gnu_apl_la-Bif_F12_TAKE_DROP.lo \
	lib_gnu_apl_la-Bif_OPER1_COMMUTE.lo \
	lib_gnu_apl_la-Bif_OPER1_EACH.lo \
	lib_gnu_apl_la-Bif_OPER2_POWER.lo \
	lib_gnu_apl_la-Bif_OPER2_INNER.lo \
	lib_gnu_apl_la-Bif_OPER2_OUTER.lo \
	lib_gnu_apl_la-Bif_OPER2_RANK.lo \
	lib_gnu_apl_la-Bif_OPER1_REDUCE.lo \
	lib_gnu_apl_la-Bif_OPER1_SCAN.lo lib_gnu_apl_la-CDR.lo \
	lib_gnu_apl_la-Cell.lo lib_gnu_apl_la-Doxy.lo \
	lib_gnu_apl_la-CharCell.lo lib_gnu_apl_la-Command.lo \
	lib_gnu_apl_la-Common.lo lib_gnu_apl_la-ComplexCell.lo \
	lib_gnu_apl_la-DerivedFunction.lo lib_gnu_apl_la-DiffOut.lo \
	lib_gnu_apl_la-DynamicObject.lo lib_gnu_apl_la-Error.lo \
	lib_gnu_apl_la-Executable.lo lib_gnu_apl_la-FloatCell.lo \
	lib_gnu_apl_la-Function.lo lib_gnu_apl_la-Id.lo \
	lib_gnu_apl_la-IndexExpr.lo lib_gnu_apl_la-IndexIterator.lo \
	lib_gnu_apl_la-InputFile.lo lib_gnu_apl_la-IntCell.lo \
	lib_gnu_apl_la-IO_Files.lo lib_gnu_apl_la-LApack.lo \
	lib_gnu_apl_la-LibPaths.lo lib_gnu_apl_la-LineInput.lo \
	lib_gnu_apl_la-Logging.lo lib_gnu_apl_la-LvalCell.lo \
	lib_gnu_apl_la-Malloc_hooks.lo lib_gnu_apl_la-Nabla.lo \
	lib_gnu_apl_la-Macro.lo lib_gnu_apl_la-Missing_Libraries.lo \
	lib_gnu_apl_la-NamedObject.lo lib_gnu_apl_la-NativeFunction.lo \
	lib_gnu_apl_la-NumericCell.lo lib_gnu_apl_la-Output.lo \
	lib_gnu_apl_la-Parallel.lo lib_gnu_apl_la-Parser.lo \
	lib_gnu_apl_la-Performance.lo lib_gnu_apl_la-PointerCell.lo \
	lib_gnu_apl_la-Prefix.lo \
	lib_gnu_apl_la-Plot_line_properties.lo \
	lib_gnu_apl_la-Plot_data.lo \
	lib_gnu_apl_la-Plot_window_properties.lo \
	lib_gnu_apl_la-PrimitiveFunction.lo \
	lib_gnu_apl_la-PrimitiveOperator.lo \
	lib_gnu_apl_la-PrintBuffer.lo lib_gnu_apl_la-QuadFunction.lo \
	lib_gnu_apl_la-ProcessorID.lo lib_gnu_apl_la-Quad_CR.lo \
	lib_gnu_apl_la-Quad_DLX.lo lib_gnu_apl_la-Quad_FFT.lo \
	lib_gnu_apl_la-Quad_FIO.lo lib_gnu_apl_la-Quad_FX.lo \
	lib_gnu_apl_la-Quad_GTK.lo lib_gnu_apl_la-Quad_JSON.lo \
	lib_gnu_apl_la-Quad_MAP.lo lib_gnu_apl_la-Quad_PLOT.lo \
	lib_gnu_apl_la-Quad_RE.lo lib_gnu_apl_la-Quad_RL.lo \
	lib_gnu_apl_la-Quad_RVAL.lo lib_gnu_apl_la-Quad_SQL.lo \
	lib_gnu_apl_la-Quad_SVx.lo lib_gnu_apl_la-Quad_TF.lo \
	lib_gnu_apl_la-Quad_WA.lo lib_gnu_apl_la-Quad_XML.lo \
	lib_gnu_apl_la-RealCell.lo lib_gnu_apl_la-sbrk.lo \
	lib_gnu_apl_la-Shape.lo lib_gnu_apl_la-ScalarFunction.lo \
	lib_gnu_apl_la-Security.lo lib_gnu_apl_la-StateIndicator.lo \
	lib_gnu_apl_la-Svar_DB.lo lib_gnu_apl_la-Svar_record.lo \
	lib_gnu_apl_la-Symbol.lo lib_gnu_apl_la-SymbolTable.lo \
	lib_gnu_apl_la-SystemVariable.lo \
	lib_gnu_apl_la-TabExpansion.lo \
	lib_gnu_apl_la-Thread_context.lo lib_gnu_apl_la-Token.lo \
	lib_gnu_apl_la-Tokenizer.lo lib_gnu_apl_la-UCS_string.lo \
	lib_gnu_apl_la-UCS_string_vector.lo \
	lib_gnu_apl_la-UserFunction.lo \
	lib_gnu_apl_la-UserFunction_header.lo \
	lib_gnu_apl_la-UserPreferences.lo \
	lib_gnu_apl_la-UTF8_string.lo lib_gnu_apl_la-Value.lo \
	lib_gnu_apl_la-ValueHistory.lo lib_gnu_apl_la-Workspace.lo \
	lib_gnu_apl_la-static_Objects.lo $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5)
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@am_lib_gnu_apl_la_OBJECTS =  \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@	$(am__objects_6) \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@	lib_gnu_apl_la-python_apl.lo
lib_gnu_apl_la_OBJECTS = $(am_lib_gnu_apl_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
lib_gnu_apl_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) \
	$(lib_gnu_apl_la_LDFLAGS) $(LDFLAGS) -o $@
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@am_lib_gnu_apl_la_rpath = -rpath \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@	$(pkglibdir)
libapl_la_LIBADD =
am__libapl_la_SOURCES_DIST = Plot_xcb.cc Plot_gtk.cc ../buildtag.hh \
	../config.h APL_Float_as_class.hh APL_types.hh Archive.cc \
	Archive.hh ArrayIterator.hh Assert.cc Assert.hh Avec.cc \
	Avec.def Avec.hh Backtrace.cc Backtrace.hh Bif_F12_COMMA.cc \
	Bif_F12_COMMA.hh Bif_F12_DOMINO.cc Bif_F12_DOMINO.hh \
	Bif_F12_INDEX_OF.cc Bif_F12_INDEX_OF.hh \
	Bif_F12_INTERVAL_INDEX.cc Bif_F12_INTERVAL_INDEX.hh \
	Bif_F12_FORMAT.cc Bif_F12_FORMAT.hh Bif_F12_PARTITION_PICK.cc \
	Bif_F12_PARTITION_PICK.hh Bif_F12_SORT.cc Bif_F12_SORT.hh \
	Bif_F12_TAKE_DROP.cc Bif_F12_TAKE_DROP.hh Bif_OPER1_COMMUTE.cc \
	Bif_OPER1_COMMUTE.hh Bif_OPER1_EACH.cc Bif_OPER1_EACH.hh \
	Bif_OPER2_POWER.cc Bif_OPER2_POWER.hh Bif_OPER2_INNER.cc \
	Bif_OPER2_INNER.hh Bif_OPER2_OUTER.cc Bif_OPER2_OUTER.hh \
	Bif_OPER2_RANK.cc Bif_OPER2_RANK.hh Bif_OPER1_REDUCE.cc \
	Bif_OPER1_REDUCE.hh Bif_OPER1_SCAN.cc Bif_OPER1_SCAN.hh CDR.cc \
	CDR.hh Cell.cc Cell.icc Cell.hh Doxy.cc Doxy.hh CharCell.cc \
	CharCell.hh Command.cc Command.def Command.hh Common.cc \
	Common.hh ComplexCell.cc ComplexCell.hh DerivedFunction.cc \
	DerivedFunction.hh DiffOut.cc DiffOut.hh DynamicObject.cc \
	DynamicObject.hh Error.cc Error.def Error.hh Error_macros.hh \
	ErrorCode.hh Executable.cc Executable.hh FloatCell.cc \
	FloatCell.hh Function.cc Function.hh Help.def Heapsort.hh \
	Id.cc Id.def Id.hh IdEnums.hh IndexExpr.cc IndexExpr.hh \
	IndexIterator.cc IndexIterator.hh InputFile.cc InputFile.hh \
	IntCell.cc IntCell.hh IO_Files.cc IO_Files.hh LApack.cc \
	LApack.hh LibPaths.cc LibPaths.hh LineInput.cc LineInput.hh \
	Logging.cc Logging.def Logging.hh LvalCell.cc LvalCell.hh \
	Malloc_hooks.cc Nabla.cc Nabla.hh Macro.cc Macro.def Macro.hh \
	Missing_Libraries.cc NamedObject.cc NamedObject.hh \
	NativeFunction.cc NativeFunction.hh Native_interface.hh \
	NumericCell.cc NumericCell.hh Output.cc Output.hh PJob.hh \
	Parallel.cc Parallel.hh Parser.cc Parser.hh Performance.cc \
	Performance.def Performance.hh PointerCell.cc PointerCell.hh \
	Prefix.cc Prefix.def Prefix.hh Plot_line_properties.cc \
	Plot_line_properties.hh Plot_data.cc Plot_data.hh \
	Plot_window_properties.cc Plot_window_properties.hh \
	PrimitiveFunction.cc PrimitiveFunction.hh PrimitiveOperator.cc \
	PrimitiveOperator.hh PrintBuffer.cc PrintBuffer.hh \
	PrintContext.hh PrintOperator.hh QuadFunction.cc \
	QuadFunction.hh ProcessorID.cc ProcessorID.hh Quad_CR.cc \
	Quad_CR.def Quad_CR.hh Quad_DLX.cc Quad_DLX.hh Quad_FFT.cc \
	Quad_FFT.hh Quad_FIO.cc Quad_FIO.def Quad_FIO.hh Quad_FX.cc \
	Quad_FX.hh Quad_GTK.cc Quad_GTK.hh Quad_JSON.cc Quad_JSON.hh \
	Quad_MAP.cc Quad_MAP.hh Quad_PLOT.cc Quad_PLOT.def \
	Quad_PLOT.hh Quad_RE.cc Quad_RE.hh Quad_RL.cc Quad_RL.hh \
	Quad_RVAL.cc Quad_RVAL.hh Quad_SQL.cc Quad_SQL.hh Quad_SVx.cc \
	Quad_SVx.hh Quad_TF.cc Quad_TF.hh Quad_WA.cc Quad_WA.hh \
	Quad_XML.cc Quad_XML.hh RealCell.cc RealCell.hh sbrk.cc \
	Shape.cc Shape.hh ScalarFunction.cc ScalarFunction.hh \
	Security.cc Security.def Security.hh StateIndicator.cc \
	StateIndicator.hh Svar_DB.cc Svar_DB.hh Svar_record.cc \
	Svar_record.hh tcp_signal.m4 Svar_signals.def Svar_signals.hh \
	Symbol.cc Symbol.hh SymbolTable.cc SymbolTable.hh \
	SystemLimits.def SystemLimits.hh SystemVariable.cc \
	SystemVariable.def SystemVariable.hh TabExpansion.cc \
	TabExpansion.hh Thread_context.cc Thread_context.hh Token.cc \
	Token.def Token.hh TokenEnums.hh Tokenizer.cc Tokenizer.hh \
	UCS_string.cc UCS_string.hh UCS_string_vector.cc \
	UCS_string_vector.hh Unicode.hh UserFunction.cc \
	UserFunction.hh UserFunction_header.cc UserFunction_header.hh \
	UserPreferences.cc UserPreferences.hh UTF8_string.cc \
	UTF8_string.hh Value.cc Value.icc Value.hh Value_P.icc \
	Value_P.hh ValueHistory.cc ValueHistory.hh Workspace.cc \
	Workspace.hh static_Objects.cc static_Objects.hh Regexp.cc \
	Regexp.hh sql/SqliteArgListBuilder.cc \
	sql/SqliteArgListBuilder.hh sql/SqliteConnection.cc \
	sql/SqliteConnection.hh sql/SqliteResultValue.cc \
	sql/SqliteResultValue.hh sql/SqliteProvider.cc \
	sql/SqliteProvider.hh sql/Connection.cc \
	sql/PostgresArgListBuilder.cc sql/PostgresArgListBuilder.hh \
	sql/PostgresConnection.cc sql/PostgresConnection.hh \
	sql/PostgresProvider.cc sql/PostgresProvider.hh libapl.h \
	libapl.cc
@HAVE_GTK3_FALSE@am__objects_7 = libapl_la-Plot_xcb.lo
@HAVE_GTK3_TRUE@am__objects_7 = libapl_la-Plot_gtk.lo
@HAVE_LIBPCRE2_32_TRUE@am__objects_8 = libapl_la-Regexp.lo
@SQLITE3_TRUE@am__objects_9 = sql/libapl_la-SqliteArgListBuilder.lo \
@SQLITE3_TRUE@	sql/libapl_la-SqliteConnection.lo \
@SQLITE3_TRUE@	sql/libapl_la-SqliteResultValue.lo \
@SQLITE3_TRUE@	sql/libapl_la-SqliteProvider.lo \
@SQLITE3_TRUE@	sql/libapl_la-Connection.lo
@POSTGRES_TRUE@@SQLITE3_FALSE@am__objects_10 =  \
@POSTGRES_TRUE@@SQLITE3_FALSE@	sql/libapl_la-Connection.lo
@POSTGRES_TRUE@am__objects_11 =  \
@POSTGRES_TRUE@	sql/libapl_la-PostgresArgListBuilder.lo \
@POSTGRES_TRUE@	sql/libapl_la-PostgresConnection.lo \
@POSTGRES_TRUE@	sql/libapl_la-PostgresProvider.lo
am__objects_12 = $(am__objects_7) libapl_la-Archive.lo \
	libapl_la-Assert.lo libapl_la-Avec.lo libapl_la-Backtrace.lo \
	libapl_la-Bif_F12_COMMA.lo libapl_la-Bif_F12_DOMINO.lo \
	libapl_la-Bif_F12_INDEX_OF.lo \
	libapl_la-Bif_F12_INTERVAL_INDEX.lo \
	libapl_la-Bif_F12_FORMAT.lo \
	libapl_la-Bif_F12_PARTITION_PICK.lo libapl_la-Bif_F12_SORT.lo \
	libapl_la-Bif_F12_TAKE_DROP.lo libapl_la-Bif_OPER1_COMMUTE.lo \
	libapl_la-Bif_OPER1_EACH.lo libapl_la-Bif_OPER2_POWER.lo \
	libapl_la-Bif_OPER2_INNER.lo libapl_la-Bif_OPER2_OUTER.lo \
	libapl_la-Bif_OPER2_RANK.lo libapl_la-Bif_OPER1_REDUCE.lo \
	libapl_la-Bif_OPER1_SCAN.lo libapl_la-CDR.lo libapl_la-Cell.lo \
	libapl_la-Doxy.lo libapl_la-CharCell.lo libapl_la-Command.lo \
	libapl_la-Common.lo libapl_la-ComplexCell.lo \
	libapl_la-DerivedFunction.lo libapl_la-DiffOut.lo \
	libapl_la-DynamicObject.lo libapl_la-Error.lo \
	libapl_la-Executable.lo libapl_la-FloatCell.lo \
	libapl_la-Function.lo libapl_la-Id.lo libapl_la-IndexExpr.lo \
	libapl_la-IndexIterator.lo libapl_la-InputFile.lo \
	libapl_la-IntCell.lo libapl_la-IO_Files.lo libapl_la-LApack.lo \
	libapl_la-LibPaths.lo libapl_la-LineInput.lo \
	libapl_la-Logging.lo libapl_la-LvalCell.lo \
	libapl_la-Malloc_hooks.lo libapl_la-Nabla.lo \
	libapl_la-Macro.lo libapl_la-Missing_Libraries.lo \
	libapl_la-NamedObject.lo libapl_la-NativeFunction.lo \
	libapl_la-NumericCell.lo libapl_la-Output.lo \
	libapl_la-Parallel.lo libapl_la-Parser.lo \
	libapl_la-Performance.lo libapl_la-PointerCell.lo \
	libapl_la-Prefix.lo libapl_la-Plot_line_properties.lo \
	libapl_la-Plot_data.lo libapl_la-Plot_window_properties.lo \
	libapl_la-PrimitiveFunction.lo libapl_la-PrimitiveOperator.lo \
	libapl_la-PrintBuffer.lo libapl_la-QuadFunction.lo \
	libapl_la-ProcessorID.lo libapl_la-Quad_CR.lo \
	libapl_la-Quad_DLX.lo libapl_la-Quad_FFT.lo \
	libapl_la-Quad_FIO.lo libapl_la-Quad_FX.lo \
	libapl_la-Quad_GTK.lo libapl_la-Quad_JSON.lo \
	libapl_la-Quad_MAP.lo libapl_la-Quad_PLOT.lo \
	libapl_la-Quad_RE.lo libapl_la-Quad_RL.lo \
	libapl_la-Quad_RVAL.lo libapl_la-Quad_SQL.lo \
	libapl_la-Quad_SVx.lo libapl_la-Quad_TF.lo \
	libapl_la-Quad_WA.lo libapl_la-Quad_XML.lo \
	libapl_la-RealCell.lo libapl_la-sbrk.lo libapl_la-Shape.lo \
	libapl_la-ScalarFunction.lo libapl_la-Security.lo \
	libapl_la-StateIndicator.lo libapl_la-Svar_DB.lo \
	libapl_la-Svar_record.lo libapl_la-Symbol.lo \
	libapl_la-SymbolTable.lo libapl_la-SystemVariable.lo \
	libapl_la-TabExpansion.lo libapl_la-Thread_context.lo \
	libapl_la-Token.lo libapl_la-Tokenizer.lo \
	libapl_la-UCS_string.lo libapl_la-UCS_string_vector.lo \
	libapl_la-UserFunction.lo libapl_la-UserFunction_header.lo \
	libapl_la-UserPreferences.lo libapl_la-UTF8_string.lo \
	libapl_la-Value.lo libapl_la-ValueHistory.lo \
	libapl_la-Workspace.lo libapl_la-static_Objects.lo \
	$(am__objects_8) $(am__objects_9) $(am__objects_10) \
	$(am__objects_11)
@WANT_LIBAPL_TRUE@am_libapl_la_OBJECTS = $(am__objects_12) \
@WANT_LIBAPL_TRUE@	libapl_la-libapl.lo
libapl_la_OBJECTS = $(am_libapl_la_OBJECTS)
libapl_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(libapl_la_CXXFLAGS) \
	$(CXXFLAGS) $(libapl_la_LDFLAGS) $(LDFLAGS) -o $@
@WANT_LIBAPL_TRUE@am_libapl_la_rpath = -rpath $(pkglibdir)
PROGRAMS = $(bin_PROGRAMS)
am__apl_SOURCES_DIST = main.cc Plot_xcb.cc Plot_gtk.cc ../buildtag.hh \
	../config.h APL_Float_as_class.hh APL_types.hh Archive.cc \
	Archive.hh ArrayIterator.hh Assert.cc Assert.hh Avec.cc \
	Avec.def Avec.hh Backtrace.cc Backtrace.hh Bif_F12_COMMA.cc \
	Bif_F12_COMMA.hh Bif_F12_DOMINO.cc Bif_F12_DOMINO.hh \
	Bif_F12_INDEX_OF.cc Bif_F12_INDEX_OF.hh \
	Bif_F12_INTERVAL_INDEX.cc Bif_F12_INTERVAL_INDEX.hh \
	Bif_F12_FORMAT.cc Bif_F12_FORMAT.hh Bif_F12_PARTITION_PICK.cc \
	Bif_F12_PARTITION_PICK.hh Bif_F12_SORT.cc Bif_F12_SORT.hh \
	Bif_F12_TAKE_DROP.cc Bif_F12_TAKE_DROP.hh Bif_OPER1_COMMUTE.cc \
	Bif_OPER1_COMMUTE.hh Bif_OPER1_EACH.cc Bif_OPER1_EACH.hh \
	Bif_OPER2_POWER.cc Bif_OPER2_POWER.hh Bif_OPER2_INNER.cc \
	Bif_OPER2_INNER.hh Bif_OPER2_OUTER.cc Bif_OPER2_OUTER.hh \
	Bif_OPER2_RANK.cc Bif_OPER2_RANK.hh Bif_OPER1_REDUCE.cc \
	Bif_OPER1_REDUCE.hh Bif_OPER1_SCAN.cc Bif_OPER1_SCAN.hh CDR.cc \
	CDR.hh Cell.cc Cell.icc Cell.hh Doxy.cc Doxy.hh CharCell.cc \
	CharCell.hh Command.cc Command.def Command.hh Common.cc \
	Common.hh ComplexCell.cc ComplexCell.hh DerivedFunction.cc \
	DerivedFunction.hh DiffOut.cc DiffOut.hh DynamicObject.cc \
	DynamicObject.hh Error.cc Error.def Error.hh Error_macros.hh \
	ErrorCode.hh Executable.cc Executable.hh FloatCell.cc \
	FloatCell.hh Function.cc Function.hh Help.def Heapsort.hh \
	Id.cc Id.def Id.hh IdEnums.hh IndexExpr.cc IndexExpr.hh \
	IndexIterator.cc IndexIterator.hh InputFile.cc InputFile.hh \
	IntCell.cc IntCell.hh IO_Files.cc IO_Files.hh LApack.cc \
	LApack.hh LibPaths.cc LibPaths.hh LineInput.cc LineInput.hh \
	Logging.cc Logging.def Logging.hh LvalCell.cc LvalCell.hh \
	Malloc_hooks.cc Nabla.cc Nabla.hh Macro.cc Macro.def Macro.hh \
	Missing_Libraries.cc NamedObject.cc NamedObject.hh \
	NativeFunction.cc NativeFunction.hh Native_interface.hh \
	NumericCell.cc NumericCell.hh Output.cc Output.hh PJob.hh \
	Parallel.cc Parallel.hh Parser.cc Parser.hh Performance.cc \
	Performance.def Performance.hh PointerCell.cc PointerCell.hh \
	Prefix.cc Prefix.def Prefix.hh Plot_line_properties.cc \
	Plot_line_properties.hh Plot_data.cc Plot_data.hh \
	Plot_window_properties.cc Plot_window_properties.hh \
	PrimitiveFunction.cc PrimitiveFunction.hh PrimitiveOperator.cc \
	PrimitiveOperator.hh PrintBuffer.cc PrintBuffer.hh \
	PrintContext.hh PrintOperator.hh QuadFunction.cc \
	QuadFunction.hh ProcessorID.cc ProcessorID.hh Quad_CR.cc \
	Quad_CR.def Quad_CR.hh Quad_DLX.cc Quad_DLX.hh Quad_FFT.cc \
	Quad_FFT.hh Quad_FIO.cc Quad_FIO.def Quad_FIO.hh Quad_FX.cc \
	Quad_FX.hh Quad_GTK.cc Quad_GTK.hh Quad_JSON.cc Quad_JSON.hh \
	Quad_MAP.cc Quad_MAP.hh Quad_PLOT.cc Quad_PLOT.def \
	Quad_PLOT.hh Quad_RE.cc Quad_RE.hh Quad_RL.cc Quad_RL.hh \
	Quad_RVAL.cc Quad_RVAL.hh Quad_SQL.cc Quad_SQL.hh Quad_SVx.cc \
	Quad_SVx.hh Quad_TF.cc Quad_TF.hh Quad_WA.cc Quad_WA.hh \
	Quad_XML.cc Quad_XML.hh RealCell.cc RealCell.hh sbrk.cc \
	Shape.cc Shape.hh ScalarFunction.cc ScalarFunction.hh \
	Security.cc Security.def Security.hh StateIndicator.cc \
	StateIndicator.hh Svar_DB.cc Svar_DB.hh Svar_record.cc \
	Svar_record.hh tcp_signal.m4 Svar_signals.def Svar_signals.hh \
	Symbol.cc Symbol.hh SymbolTable.cc SymbolTable.hh \
	SystemLimits.def SystemLimits.hh SystemVariable.cc \
	SystemVariable.def SystemVariable.hh TabExpansion.cc \
	TabExpansion.hh Thread_context.cc Thread_context.hh Token.cc \
	Token.def Token.hh TokenEnums.hh Tokenizer.cc Tokenizer.hh \
	UCS_string.cc UCS_string.hh UCS_string_vector.cc \
	UCS_string_vector.hh Unicode.hh UserFunction.cc \
	UserFunction.hh UserFunction_header.cc UserFunction_header.hh \
	UserPreferences.cc UserPreferences.hh UTF8_string.cc \
	UTF8_string.hh Value.cc Value.icc Value.hh Value_P.icc \
	Value_P.hh ValueHistory.cc ValueHistory.hh Workspace.cc \
	Workspace.hh static_Objects.cc static_Objects.hh Regexp.cc \
	Regexp.hh sql/SqliteArgListBuilder.cc \
	sql/SqliteArgListBuilder.hh sql/SqliteConnection.cc \
	sql/SqliteConnection.hh sql/SqliteResultValue.cc \
	sql/SqliteResultValue.hh sql/SqliteProvider.cc \
	sql/SqliteProvider.hh sql/Connection.cc \
	sql/PostgresArgListBuilder.cc sql/PostgresArgListBuilder.hh \
	sql/PostgresConnection.cc sql/PostgresConnection.hh \
	sql/PostgresProvider.cc sql/PostgresProvider.hh
@HAVE_GTK3_FALSE@am__objects_13 = apl-Plot_xcb.$(OBJEXT)
@HAVE_GTK3_TRUE@am__objects_13 = apl-Plot_gtk.$(OBJEXT)
@HAVE_LIBPCRE2_32_TRUE@am__objects_14 = apl-Regexp.$(OBJEXT)
@SQLITE3_TRUE@am__objects_15 = sql/apl-SqliteArgListBuilder.$(OBJEXT) \
@SQLITE3_TRUE@	sql/apl-SqliteConnection.$(OBJEXT) \
@SQLITE3_TRUE@	sql/apl-SqliteResultValue.$(OBJEXT) \
@SQLITE3_TRUE@	sql/apl-SqliteProvider.$(OBJEXT) \
@SQLITE3_TRUE@	sql/apl-Connection.$(OBJEXT)
@POSTGRES_TRUE@@SQLITE3_FALSE@am__objects_16 =  \
@POSTGRES_TRUE@@SQLITE3_FALSE@	sql/apl-Connection.$(OBJEXT)
@POSTGRES_TRUE@am__objects_17 =  \
@POSTGRES_TRUE@	sql/apl-PostgresArgListBuilder.$(OBJEXT) \
@POSTGRES_TRUE@	sql/apl-PostgresConnection.$(OBJEXT) \
@POSTGRES_TRUE@	sql/apl-PostgresProvider.$(OBJEXT)
am__objects_18 = $(am__objects_13) apl-Archive.$(OBJEXT) \
	apl-Assert.$(OBJEXT) apl-Avec.$(OBJEXT) \
	apl-Backtrace.$(OBJEXT) apl-Bif_F12_COMMA.$(OBJEXT) \
	apl-Bif_F12_DOMINO.$(OBJEXT) apl-Bif_F12_INDEX_OF.$(OBJEXT) \
	apl-Bif_F12_INTERVAL_INDEX.$(OBJEXT) \
	apl-Bif_F12_FORMAT.$(OBJEXT) \
	apl-Bif_F12_PARTITION_PICK.$(OBJEXT) \
	apl-Bif_F12_SORT.$(OBJEXT) apl-Bif_F12_TAKE_DROP.$(OBJEXT) \
	apl-Bif_OPER1_COMMUTE.$(OBJEXT) apl-Bif_OPER1_EACH.$(OBJEXT) \
	apl-Bif_OPER2_POWER.$(OBJEXT) apl-Bif_OPER2_INNER.$(OBJEXT) \
	apl-Bif_OPER2_OUTER.$(OBJEXT) apl-Bif_OPER2_RANK.$(OBJEXT) \
	apl-Bif_OPER1_REDUCE.$(OBJEXT) apl-Bif_OPER1_SCAN.$(OBJEXT) \
	apl-CDR.$(OBJEXT) apl-Cell.$(OBJEXT) apl-Doxy.$(OBJEXT) \
	apl-CharCell.$(OBJEXT) apl-Command.$(OBJEXT) \
	apl-Common.$(OBJEXT) apl-ComplexCell.$(OBJEXT) \
	apl-DerivedFunction.$(OBJEXT) apl-DiffOut.$(OBJEXT) \
	apl-DynamicObject.$(OBJEXT) apl-Error.$(OBJEXT) \
	apl-Executable.$(OBJEXT) apl-FloatCell.$(OBJEXT) \
	apl-Function.$(OBJEXT) apl-Id.$(OBJEXT) \
	apl-IndexExpr.$(OBJEXT) apl-IndexIterator.$(OBJEXT) \
	apl-InputFile.$(OBJEXT) apl-IntCell.$(OBJEXT) \
	apl-IO_Files.$(OBJEXT) apl-LApack.$(OBJEXT) \
	apl-LibPaths.$(OBJEXT) apl-LineInput.$(OBJEXT) \
	apl-Logging.$(OBJEXT) apl-LvalCell.$(OBJEXT) \
	apl-Malloc_hooks.$(OBJEXT) apl-Nabla.$(OBJEXT) \
	apl-Macro.$(OBJEXT) apl-Missing_Libraries.$(OBJEXT) \
	apl-NamedObject.$(OBJEXT) apl-NativeFunction.$(OBJEXT) \
	apl-NumericCell.$(OBJEXT) apl-Output.$(OBJEXT) \
	apl-Parallel.$(OBJEXT) apl-Parser.$(OBJEXT) \
	apl-Performance.$(OBJEXT) apl-PointerCell.$(OBJEXT) \
	apl-Prefix.$(OBJEXT) apl-Plot_line_properties.$(OBJEXT) \
	apl-Plot_data.$(OBJEXT) apl-Plot_window_properties.$(OBJEXT) \
	apl-PrimitiveFunction.$(OBJEXT) \
	apl-PrimitiveOperator.$(OBJEXT) apl-PrintBuffer.$(OBJEXT) \
	apl-QuadFunction.$(OBJEXT) apl-ProcessorID.$(OBJEXT) \
	apl-Quad_CR.$(OBJEXT) apl-Quad_DLX.$(OBJEXT) \
	apl-Quad_FFT.$(OBJEXT) apl-Quad_FIO.$(OBJEXT) \
	apl-Quad_FX.$(OBJEXT) apl-Quad_GTK.$(OBJEXT) \
	apl-Quad_JSON.$(OBJEXT) apl-Quad_MAP.$(OBJEXT) \
	apl-Quad_PLOT.$(OBJEXT) apl-Quad_RE.$(OBJEXT) \
	apl-Quad_RL.$(OBJEXT) apl-Quad_RVAL.$(OBJEXT) \
	apl-Quad_SQL.$(OBJEXT) apl-Quad_SVx.$(OBJEXT) \
	apl-Quad_TF.$(OBJEXT) apl-Quad_WA.$(OBJEXT) \
	apl-Quad_XML.$(OBJEXT) apl-RealCell.$(OBJEXT) \
	apl-sbrk.$(OBJEXT) apl-Shape.$(OBJEXT) \
	apl-ScalarFunction.$(OBJEXT) apl-Security.$(OBJEXT) \
	apl-StateIndicator.$(OBJEXT) apl-Svar_DB.$(OBJEXT) \
	apl-Svar_record.$(OBJEXT) apl-Symbol.$(OBJEXT) \
	apl-SymbolTable.$(OBJEXT) apl-SystemVariable.$(OBJEXT) \
	apl-TabExpansion.$(OBJEXT) apl-Thread_context.$(OBJEXT) \
	apl-Token.$(OBJEXT) apl-Tokenizer.$(OBJEXT) \
	apl-UCS_string.$(OBJEXT) apl-UCS_string_vector.$(OBJEXT) \
	apl-UserFunction.$(OBJEXT) apl-UserFunction_header.$(OBJEXT) \
	apl-UserPreferences.$(OBJEXT) apl-UTF8_string.$(OBJEXT) \
	apl-Value.$(OBJEXT) apl-ValueHistory.$(OBJEXT) \
	apl-Workspace.$(OBJEXT) apl-static_Objects.$(OBJEXT) \
	$(am__objects_14) $(am__objects_15) $(am__objects_16) \
	$(am__objects_17)
@WANT_LIBAPL_FALSE@@WANT_PYTHON_FALSE@am_apl_OBJECTS =  \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_FALSE@	apl-main.$(OBJEXT) \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_FALSE@	$(am__objects_18)
am__EXTRA_apl_SOURCES_DIST = Plot_gtk.cc Plot_xcb.cc
apl_OBJECTS = $(am_apl_OBJECTS)
am__DEPENDENCIES_1 =
apl_DEPENDENCIES = $(am__DEPENDENCIES_1)
apl_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(apl_CXXFLAGS) \
	$(CXXFLAGS) $(apl_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(lib_gnu_apl_la_SOURCES) $(libapl_la_SOURCES) \
	$(apl_SOURCES) $(EXTRA_apl_SOURCES)
DIST_SOURCES = $(am__lib_gnu_apl_la_SOURCES_DIST) \
	$(am__libapl_la_SOURCES_DIST) $(am__apl_SOURCES_DIST) \
	$(am__EXTRA_apl_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(dist_noinst_DATA)
am__pkginclude_HEADERS_DIST = libapl.h Error.def
HEADERS = $(pkginclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in TODO
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
APSERVER_PATH = @APSERVER_PATH@
APSERVER_PORT = @APSERVER_PORT@
APSERVER_TRANSPORT = @APSERVER_TRANSPORT@
AR = @AR@
ASSERT_LEVEL_WANTED = @ASSERT_LEVEL_WANTED@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CORE_COUNT_WANTED = @CORE_COUNT_WANTED@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXX_WERROR = @CXX_WERROR@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DEVELOP_WANTED = @DEVELOP_WANTED@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DYNAMIC_LOG_WANTED = @DYNAMIC_LOG_WANTED@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GCOV_WANTED = @GCOV_WANTED@
GPROF_WANTED = @GPROF_WANTED@
GREP = @GREP@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_LDFLAGS = @GTK_LDFLAGS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MAX_RANK_WANTED = @MAX_RANK_WANTED@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PCRE_CFLAGS = @PCRE_CFLAGS@
PCRE_LIBS = @PCRE_LIBS@
PERFORMANCE_COUNTERS_WANTED = @PERFORMANCE_COUNTERS_WANTED@
PG_CONFIG = @PG_CONFIG@
POSTGRESQL_CFLAGS = @POSTGRESQL_CFLAGS@
POSTGRESQL_LDFLAGS = @POSTGRESQL_LDFLAGS@
POSTGRESQL_VERSION = @POSTGRESQL_VERSION@
PYTHON_CFLAGS = @PYTHON_CFLAGS@
RANLIB = @RANLIB@
RATIONAL_NUMBERS_WANTED = @RATIONAL_NUMBERS_WANTED@
SECURITY_LEVEL_WANTED = @SECURITY_LEVEL_WANTED@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHORT_VALUE_LENGTH_WANTED = @SHORT_VALUE_LENGTH_WANTED@
SQLITE3_CFLAGS = @SQLITE3_CFLAGS@
SQLITE3_LDFLAGS = @SQLITE3_LDFLAGS@
SQLITE3_VERSION = @SQLITE3_VERSION@
STRIP = @STRIP@
VALUE_CHECK_WANTED = @VALUE_CHECK_WANTED@
VALUE_HISTORY_WANTED = @VALUE_HISTORY_WANTED@
VERSION = @VERSION@
VF_TRACING_WANTED = @VF_TRACING_WANTED@
VISIBLE_MARKERS_WANTED = @VISIBLE_MARKERS_WANTED@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = $(datadir)/locale
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# NOTE: without 'no-dependencies' make target distclean won't work.
AUTOMAKE_OPTIONS = no-dependencies
EXTRA_DIRS = $(am__append_1)
SUBDIRS = native $(EXTRA_DIRS) $(am__append_2)
@HAVE_GTK3_FALSE@plot_SOURCES = Plot_xcb.cc
@HAVE_GTK3_TRUE@plot_SOURCES = Plot_gtk.cc
@HAVE_GTK3_FALSE@EXTRA_apl_SOURCES = Plot_gtk.cc
@HAVE_GTK3_TRUE@EXTRA_apl_SOURCES = Plot_xcb.cc
dist_noinst_DATA = valgrind.supp
DIST_SUBDIRS = $(SUBDIRS) testcases

# common means common to the apl and libapl builds
#
common_CXXFLAGS = -Wall -I sql -I $(abs_top_srcdir) $(CXX_WERROR) \
	$(GTK_CFLAGS) $(GTK_LIBS) $(PYTHON_CFLAGS) $(am__append_4) \
	$(am__append_8)
common_LDFLAGS = -export-dynamic $(GTK_LDFLAGS) $(am__append_5) \
	$(am__append_9)
common_SOURCES = $(plot_SOURCES) ../buildtag.hh ../config.h \
	APL_Float_as_class.hh APL_types.hh Archive.cc Archive.hh \
	ArrayIterator.hh Assert.cc Assert.hh Avec.cc Avec.def Avec.hh \
	Backtrace.cc Backtrace.hh Bif_F12_COMMA.cc Bif_F12_COMMA.hh \
	Bif_F12_DOMINO.cc Bif_F12_DOMINO.hh Bif_F12_INDEX_OF.cc \
	Bif_F12_INDEX_OF.hh Bif_F12_INTERVAL_INDEX.cc \
	Bif_F12_INTERVAL_INDEX.hh Bif_F12_FORMAT.cc Bif_F12_FORMAT.hh \
	Bif_F12_PARTITION_PICK.cc Bif_F12_PARTITION_PICK.hh \
	Bif_F12_SORT.cc Bif_F12_SORT.hh Bif_F12_TAKE_DROP.cc \
	Bif_F12_TAKE_DROP.hh Bif_OPER1_COMMUTE.cc Bif_OPER1_COMMUTE.hh \
	Bif_OPER1_EACH.cc Bif_OPER1_EACH.hh Bif_OPER2_POWER.cc \
	Bif_OPER2_POWER.hh Bif_OPER2_INNER.cc Bif_OPER2_INNER.hh \
	Bif_OPER2_OUTER.cc Bif_OPER2_OUTER.hh Bif_OPER2_RANK.cc \
	Bif_OPER2_RANK.hh Bif_OPER1_REDUCE.cc Bif_OPER1_REDUCE.hh \
	Bif_OPER1_SCAN.cc Bif_OPER1_SCAN.hh CDR.cc CDR.hh Cell.cc \
	Cell.icc Cell.hh Doxy.cc Doxy.hh CharCell.cc CharCell.hh \
	Command.cc Command.def Command.hh Common.cc Common.hh \
	ComplexCell.cc ComplexCell.hh DerivedFunction.cc \
	DerivedFunction.hh DiffOut.cc DiffOut.hh DynamicObject.cc \
	DynamicObject.hh Error.cc Error.def Error.hh Error_macros.hh \
	ErrorCode.hh Executable.cc Executable.hh FloatCell.cc \
	FloatCell.hh Function.cc Function.hh Help.def Heapsort.hh \
	Id.cc Id.def Id.hh IdEnums.hh IndexExpr.cc IndexExpr.hh \
	IndexIterator.cc IndexIterator.hh InputFile.cc InputFile.hh \
	IntCell.cc IntCell.hh IO_Files.cc IO_Files.hh LApack.cc \
	LApack.hh LibPaths.cc LibPaths.hh LineInput.cc LineInput.hh \
	Logging.cc Logging.def Logging.hh LvalCell.cc LvalCell.hh \
	Malloc_hooks.cc Nabla.cc Nabla.hh Macro.cc Macro.def Macro.hh \
	Missing_Libraries.cc NamedObject.cc NamedObject.hh \
	NativeFunction.cc NativeFunction.hh Native_interface.hh \
	NumericCell.cc NumericCell.hh Output.cc Output.hh PJob.hh \
	Parallel.cc Parallel.hh Parser.cc Parser.hh Performance.cc \
	Performance.def Performance.hh PointerCell.cc PointerCell.hh \
	Prefix.cc Prefix.def Prefix.hh Plot_line_properties.cc \
	Plot_line_properties.hh Plot_data.cc Plot_data.hh \
	Plot_window_properties.cc Plot_window_properties.hh \
	PrimitiveFunction.cc PrimitiveFunction.hh PrimitiveOperator.cc \
	PrimitiveOperator.hh PrintBuffer.cc PrintBuffer.hh \
	PrintContext.hh PrintOperator.hh QuadFunction.cc \
	QuadFunction.hh ProcessorID.cc ProcessorID.hh Quad_CR.cc \
	Quad_CR.def Quad_CR.hh Quad_DLX.cc Quad_DLX.hh Quad_FFT.cc \
	Quad_FFT.hh Quad_FIO.cc Quad_FIO.def Quad_FIO.hh Quad_FX.cc \
	Quad_FX.hh Quad_GTK.cc Quad_GTK.hh Quad_JSON.cc Quad_JSON.hh \
	Quad_MAP.cc Quad_MAP.hh Quad_PLOT.cc Quad_PLOT.def \
	Quad_PLOT.hh Quad_RE.cc Quad_RE.hh Quad_RL.cc Quad_RL.hh \
	Quad_RVAL.cc Quad_RVAL.hh Quad_SQL.cc Quad_SQL.hh Quad_SVx.cc \
	Quad_SVx.hh Quad_TF.cc Quad_TF.hh Quad_WA.cc Quad_WA.hh \
	Quad_XML.cc Quad_XML.hh RealCell.cc RealCell.hh sbrk.cc \
	Shape.cc Shape.hh ScalarFunction.cc ScalarFunction.hh \
	Security.cc Security.def Security.hh StateIndicator.cc \
	StateIndicator.hh Svar_DB.cc Svar_DB.hh Svar_record.cc \
	Svar_record.hh tcp_signal.m4 Svar_signals.def Svar_signals.hh \
	Symbol.cc Symbol.hh SymbolTable.cc SymbolTable.hh \
	SystemLimits.def SystemLimits.hh SystemVariable.cc \
	SystemVariable.def SystemVariable.hh TabExpansion.cc \
	TabExpansion.hh Thread_context.cc Thread_context.hh Token.cc \
	Token.def Token.hh TokenEnums.hh Tokenizer.cc Tokenizer.hh \
	UCS_string.cc UCS_string.hh UCS_string_vector.cc \
	UCS_string_vector.hh Unicode.hh UserFunction.cc \
	UserFunction.hh UserFunction_header.cc UserFunction_header.hh \
	UserPreferences.cc UserPreferences.hh UTF8_string.cc \
	UTF8_string.hh Value.cc Value.icc Value.hh Value_P.icc \
	Value_P.hh ValueHistory.cc ValueHistory.hh Workspace.cc \
	Workspace.hh static_Objects.cc static_Objects.hh \
	$(am__append_3) $(am__append_6) $(am__append_7) \
	$(am__append_10)
pkglib_LTLIBRARIES = $(am__append_11) $(am__append_12)
@WANT_LIBAPL_TRUE@pkginclude_HEADERS = libapl.h Error.def
@WANT_LIBAPL_TRUE@libapl_la_SOURCES = $(common_SOURCES) libapl.h libapl.cc
@WANT_LIBAPL_TRUE@libapl_la_LDFLAGS = $(common_LDFLAGS) -avoid-version
# libapl_la_LDFLAGS += -module
# libapl_la_LDFLAGS += -shared
# libapl_la_LDFLAGS += -export-dynamic
@WANT_LIBAPL_TRUE@libapl_la_CXXFLAGS = $(common_CXXFLAGS) \
@WANT_LIBAPL_TRUE@	$(GCOV_WANTED) $(GPROF_WANTED) \
@WANT_LIBAPL_TRUE@	$(CXX_RDYNAMIC)
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@lib_gnu_apl_la_SOURCES = $(common_SOURCES) python_apl.cc
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@lib_gnu_apl_la_LDFLAGS =  \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@	$(common_LDFLAGS) \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@	-avoid-version
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@lib_gnu_apl_la_CXXFLAGS =  \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@	$(common_CXXFLAGS) \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@	$(GCOV_WANTED) \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@	$(GPROF_WANTED) \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@	$(CXX_RDYNAMIC) -DNDEBUG \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@	-D_FORTIFY_SOURCE=2 \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@	-fwrapv -fPIC \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@	-fstack-protector \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@	--param=ssp-buffer-size=4 \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_TRUE@	-I/usr/include/python3.4m
@WANT_LIBAPL_FALSE@@WANT_PYTHON_FALSE@apl_SOURCES = main.cc $(common_SOURCES)
@WANT_LIBAPL_FALSE@@WANT_PYTHON_FALSE@apl_CXXFLAGS =  \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_FALSE@	$(common_CXXFLAGS) \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_FALSE@	$(GCOV_WANTED) \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_FALSE@	$(GPROF_WANTED) \
@WANT_LIBAPL_FALSE@@WANT_PYTHON_FALSE@	$(CXX_RDYNAMIC)
@WANT_LIBAPL_FALSE@@WANT_PYTHON_FALSE@apl_LDFLAGS = $(common_LDFLAGS)
apl_LDADD = $(LIBS)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkglibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkglibdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkglibdir)"; \
	}

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
sql/$(am__dirstamp):
	@$(MKDIR_P) sql
	@: > sql/$(am__dirstamp)
sql/lib_gnu_apl_la-SqliteArgListBuilder.lo: sql/$(am__dirstamp)
sql/lib_gnu_apl_la-SqliteConnection.lo: sql/$(am__dirstamp)
sql/lib_gnu_apl_la-SqliteResultValue.lo: sql/$(am__dirstamp)
sql/lib_gnu_apl_la-SqliteProvider.lo: sql/$(am__dirstamp)
sql/lib_gnu_apl_la-Connection.lo: sql/$(am__dirstamp)
sql/lib_gnu_apl_la-PostgresArgListBuilder.lo: sql/$(am__dirstamp)
sql/lib_gnu_apl_la-PostgresConnection.lo: sql/$(am__dirstamp)
sql/lib_gnu_apl_la-PostgresProvider.lo: sql/$(am__dirstamp)

lib_gnu_apl.la: $(lib_gnu_apl_la_OBJECTS) $(lib_gnu_apl_la_DEPENDENCIES) $(EXTRA_lib_gnu_apl_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(lib_gnu_apl_la_LINK) $(am_lib_gnu_apl_la_rpath) $(lib_gnu_apl_la_OBJECTS) $(lib_gnu_apl_la_LIBADD) $(LIBS)
sql/libapl_la-SqliteArgListBuilder.lo: sql/$(am__dirstamp)
sql/libapl_la-SqliteConnection.lo: sql/$(am__dirstamp)
sql/libapl_la-SqliteResultValue.lo: sql/$(am__dirstamp)
sql/libapl_la-SqliteProvider.lo: sql/$(am__dirstamp)
sql/libapl_la-Connection.lo: sql/$(am__dirstamp)
sql/libapl_la-PostgresArgListBuilder.lo: sql/$(am__dirstamp)
sql/libapl_la-PostgresConnection.lo: sql/$(am__dirstamp)
sql/libapl_la-PostgresProvider.lo: sql/$(am__dirstamp)

libapl.la: $(libapl_la_OBJECTS) $(libapl_la_DEPENDENCIES) $(EXTRA_libapl_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libapl_la_LINK) $(am_libapl_la_rpath) $(libapl_la_OBJECTS) $(libapl_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
sql/apl-SqliteArgListBuilder.$(OBJEXT): sql/$(am__dirstamp)
sql/apl-SqliteConnection.$(OBJEXT): sql/$(am__dirstamp)
sql/apl-SqliteResultValue.$(OBJEXT): sql/$(am__dirstamp)
sql/apl-SqliteProvider.$(OBJEXT): sql/$(am__dirstamp)
sql/apl-Connection.$(OBJEXT): sql/$(am__dirstamp)
sql/apl-PostgresArgListBuilder.$(OBJEXT): sql/$(am__dirstamp)
sql/apl-PostgresConnection.$(OBJEXT): sql/$(am__dirstamp)
sql/apl-PostgresProvider.$(OBJEXT): sql/$(am__dirstamp)

apl$(EXEEXT): $(apl_OBJECTS) $(apl_DEPENDENCIES) $(EXTRA_apl_DEPENDENCIES) 
	@rm -f apl$(EXEEXT)
	$(AM_V_CXXLD)$(apl_LINK) $(apl_OBJECTS) $(apl_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f sql/*.$(OBJEXT)
	-rm -f sql/*.lo

distclean-compile:
	-rm -f *.tab.c

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

lib_gnu_apl_la-Plot_xcb.lo: Plot_xcb.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Plot_xcb.lo `test -f 'Plot_xcb.cc' || echo '$(srcdir)/'`Plot_xcb.cc

lib_gnu_apl_la-Plot_gtk.lo: Plot_gtk.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Plot_gtk.lo `test -f 'Plot_gtk.cc' || echo '$(srcdir)/'`Plot_gtk.cc

lib_gnu_apl_la-Archive.lo: Archive.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Archive.lo `test -f 'Archive.cc' || echo '$(srcdir)/'`Archive.cc

lib_gnu_apl_la-Assert.lo: Assert.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Assert.lo `test -f 'Assert.cc' || echo '$(srcdir)/'`Assert.cc

lib_gnu_apl_la-Avec.lo: Avec.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Avec.lo `test -f 'Avec.cc' || echo '$(srcdir)/'`Avec.cc

lib_gnu_apl_la-Backtrace.lo: Backtrace.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Backtrace.lo `test -f 'Backtrace.cc' || echo '$(srcdir)/'`Backtrace.cc

lib_gnu_apl_la-Bif_F12_COMMA.lo: Bif_F12_COMMA.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_F12_COMMA.lo `test -f 'Bif_F12_COMMA.cc' || echo '$(srcdir)/'`Bif_F12_COMMA.cc

lib_gnu_apl_la-Bif_F12_DOMINO.lo: Bif_F12_DOMINO.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_F12_DOMINO.lo `test -f 'Bif_F12_DOMINO.cc' || echo '$(srcdir)/'`Bif_F12_DOMINO.cc

lib_gnu_apl_la-Bif_F12_INDEX_OF.lo: Bif_F12_INDEX_OF.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_F12_INDEX_OF.lo `test -f 'Bif_F12_INDEX_OF.cc' || echo '$(srcdir)/'`Bif_F12_INDEX_OF.cc

lib_gnu_apl_la-Bif_F12_INTERVAL_INDEX.lo: Bif_F12_INTERVAL_INDEX.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_F12_INTERVAL_INDEX.lo `test -f 'Bif_F12_INTERVAL_INDEX.cc' || echo '$(srcdir)/'`Bif_F12_INTERVAL_INDEX.cc

lib_gnu_apl_la-Bif_F12_FORMAT.lo: Bif_F12_FORMAT.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_F12_FORMAT.lo `test -f 'Bif_F12_FORMAT.cc' || echo '$(srcdir)/'`Bif_F12_FORMAT.cc

lib_gnu_apl_la-Bif_F12_PARTITION_PICK.lo: Bif_F12_PARTITION_PICK.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_F12_PARTITION_PICK.lo `test -f 'Bif_F12_PARTITION_PICK.cc' || echo '$(srcdir)/'`Bif_F12_PARTITION_PICK.cc

lib_gnu_apl_la-Bif_F12_SORT.lo: Bif_F12_SORT.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_F12_SORT.lo `test -f 'Bif_F12_SORT.cc' || echo '$(srcdir)/'`Bif_F12_SORT.cc

lib_gnu_apl_la-Bif_F12_TAKE_DROP.lo: Bif_F12_TAKE_DROP.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_F12_TAKE_DROP.lo `test -f 'Bif_F12_TAKE_DROP.cc' || echo '$(srcdir)/'`Bif_F12_TAKE_DROP.cc

lib_gnu_apl_la-Bif_OPER1_COMMUTE.lo: Bif_OPER1_COMMUTE.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_OPER1_COMMUTE.lo `test -f 'Bif_OPER1_COMMUTE.cc' || echo '$(srcdir)/'`Bif_OPER1_COMMUTE.cc

lib_gnu_apl_la-Bif_OPER1_EACH.lo: Bif_OPER1_EACH.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_OPER1_EACH.lo `test -f 'Bif_OPER1_EACH.cc' || echo '$(srcdir)/'`Bif_OPER1_EACH.cc

lib_gnu_apl_la-Bif_OPER2_POWER.lo: Bif_OPER2_POWER.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_OPER2_POWER.lo `test -f 'Bif_OPER2_POWER.cc' || echo '$(srcdir)/'`Bif_OPER2_POWER.cc

lib_gnu_apl_la-Bif_OPER2_INNER.lo: Bif_OPER2_INNER.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_OPER2_INNER.lo `test -f 'Bif_OPER2_INNER.cc' || echo '$(srcdir)/'`Bif_OPER2_INNER.cc

lib_gnu_apl_la-Bif_OPER2_OUTER.lo: Bif_OPER2_OUTER.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_OPER2_OUTER.lo `test -f 'Bif_OPER2_OUTER.cc' || echo '$(srcdir)/'`Bif_OPER2_OUTER.cc

lib_gnu_apl_la-Bif_OPER2_RANK.lo: Bif_OPER2_RANK.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_OPER2_RANK.lo `test -f 'Bif_OPER2_RANK.cc' || echo '$(srcdir)/'`Bif_OPER2_RANK.cc

lib_gnu_apl_la-Bif_OPER1_REDUCE.lo: Bif_OPER1_REDUCE.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_OPER1_REDUCE.lo `test -f 'Bif_OPER1_REDUCE.cc' || echo '$(srcdir)/'`Bif_OPER1_REDUCE.cc

lib_gnu_apl_la-Bif_OPER1_SCAN.lo: Bif_OPER1_SCAN.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Bif_OPER1_SCAN.lo `test -f 'Bif_OPER1_SCAN.cc' || echo '$(srcdir)/'`Bif_OPER1_SCAN.cc

lib_gnu_apl_la-CDR.lo: CDR.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-CDR.lo `test -f 'CDR.cc' || echo '$(srcdir)/'`CDR.cc

lib_gnu_apl_la-Cell.lo: Cell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Cell.lo `test -f 'Cell.cc' || echo '$(srcdir)/'`Cell.cc

lib_gnu_apl_la-Doxy.lo: Doxy.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Doxy.lo `test -f 'Doxy.cc' || echo '$(srcdir)/'`Doxy.cc

lib_gnu_apl_la-CharCell.lo: CharCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-CharCell.lo `test -f 'CharCell.cc' || echo '$(srcdir)/'`CharCell.cc

lib_gnu_apl_la-Command.lo: Command.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Command.lo `test -f 'Command.cc' || echo '$(srcdir)/'`Command.cc

lib_gnu_apl_la-Common.lo: Common.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Common.lo `test -f 'Common.cc' || echo '$(srcdir)/'`Common.cc

lib_gnu_apl_la-ComplexCell.lo: ComplexCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-ComplexCell.lo `test -f 'ComplexCell.cc' || echo '$(srcdir)/'`ComplexCell.cc

lib_gnu_apl_la-DerivedFunction.lo: DerivedFunction.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-DerivedFunction.lo `test -f 'DerivedFunction.cc' || echo '$(srcdir)/'`DerivedFunction.cc

lib_gnu_apl_la-DiffOut.lo: DiffOut.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-DiffOut.lo `test -f 'DiffOut.cc' || echo '$(srcdir)/'`DiffOut.cc

lib_gnu_apl_la-DynamicObject.lo: DynamicObject.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-DynamicObject.lo `test -f 'DynamicObject.cc' || echo '$(srcdir)/'`DynamicObject.cc

lib_gnu_apl_la-Error.lo: Error.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Error.lo `test -f 'Error.cc' || echo '$(srcdir)/'`Error.cc

lib_gnu_apl_la-Executable.lo: Executable.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Executable.lo `test -f 'Executable.cc' || echo '$(srcdir)/'`Executable.cc

lib_gnu_apl_la-FloatCell.lo: FloatCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-FloatCell.lo `test -f 'FloatCell.cc' || echo '$(srcdir)/'`FloatCell.cc

lib_gnu_apl_la-Function.lo: Function.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Function.lo `test -f 'Function.cc' || echo '$(srcdir)/'`Function.cc

lib_gnu_apl_la-Id.lo: Id.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Id.lo `test -f 'Id.cc' || echo '$(srcdir)/'`Id.cc

lib_gnu_apl_la-IndexExpr.lo: IndexExpr.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-IndexExpr.lo `test -f 'IndexExpr.cc' || echo '$(srcdir)/'`IndexExpr.cc

lib_gnu_apl_la-IndexIterator.lo: IndexIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-IndexIterator.lo `test -f 'IndexIterator.cc' || echo '$(srcdir)/'`IndexIterator.cc

lib_gnu_apl_la-InputFile.lo: InputFile.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-InputFile.lo `test -f 'InputFile.cc' || echo '$(srcdir)/'`InputFile.cc

lib_gnu_apl_la-IntCell.lo: IntCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-IntCell.lo `test -f 'IntCell.cc' || echo '$(srcdir)/'`IntCell.cc

lib_gnu_apl_la-IO_Files.lo: IO_Files.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-IO_Files.lo `test -f 'IO_Files.cc' || echo '$(srcdir)/'`IO_Files.cc

lib_gnu_apl_la-LApack.lo: LApack.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-LApack.lo `test -f 'LApack.cc' || echo '$(srcdir)/'`LApack.cc

lib_gnu_apl_la-LibPaths.lo: LibPaths.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-LibPaths.lo `test -f 'LibPaths.cc' || echo '$(srcdir)/'`LibPaths.cc

lib_gnu_apl_la-LineInput.lo: LineInput.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-LineInput.lo `test -f 'LineInput.cc' || echo '$(srcdir)/'`LineInput.cc

lib_gnu_apl_la-Logging.lo: Logging.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Logging.lo `test -f 'Logging.cc' || echo '$(srcdir)/'`Logging.cc

lib_gnu_apl_la-LvalCell.lo: LvalCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-LvalCell.lo `test -f 'LvalCell.cc' || echo '$(srcdir)/'`LvalCell.cc

lib_gnu_apl_la-Malloc_hooks.lo: Malloc_hooks.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Malloc_hooks.lo `test -f 'Malloc_hooks.cc' || echo '$(srcdir)/'`Malloc_hooks.cc

lib_gnu_apl_la-Nabla.lo: Nabla.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Nabla.lo `test -f 'Nabla.cc' || echo '$(srcdir)/'`Nabla.cc

lib_gnu_apl_la-Macro.lo: Macro.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Macro.lo `test -f 'Macro.cc' || echo '$(srcdir)/'`Macro.cc

lib_gnu_apl_la-Missing_Libraries.lo: Missing_Libraries.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Missing_Libraries.lo `test -f 'Missing_Libraries.cc' || echo '$(srcdir)/'`Missing_Libraries.cc

lib_gnu_apl_la-NamedObject.lo: NamedObject.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-NamedObject.lo `test -f 'NamedObject.cc' || echo '$(srcdir)/'`NamedObject.cc

lib_gnu_apl_la-NativeFunction.lo: NativeFunction.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-NativeFunction.lo `test -f 'NativeFunction.cc' || echo '$(srcdir)/'`NativeFunction.cc

lib_gnu_apl_la-NumericCell.lo: NumericCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-NumericCell.lo `test -f 'NumericCell.cc' || echo '$(srcdir)/'`NumericCell.cc

lib_gnu_apl_la-Output.lo: Output.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Output.lo `test -f 'Output.cc' || echo '$(srcdir)/'`Output.cc

lib_gnu_apl_la-Parallel.lo: Parallel.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Parallel.lo `test -f 'Parallel.cc' || echo '$(srcdir)/'`Parallel.cc

lib_gnu_apl_la-Parser.lo: Parser.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Parser.lo `test -f 'Parser.cc' || echo '$(srcdir)/'`Parser.cc

lib_gnu_apl_la-Performance.lo: Performance.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Performance.lo `test -f 'Performance.cc' || echo '$(srcdir)/'`Performance.cc

lib_gnu_apl_la-PointerCell.lo: PointerCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-PointerCell.lo `test -f 'PointerCell.cc' || echo '$(srcdir)/'`PointerCell.cc

lib_gnu_apl_la-Prefix.lo: Prefix.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Prefix.lo `test -f 'Prefix.cc' || echo '$(srcdir)/'`Prefix.cc

lib_gnu_apl_la-Plot_line_properties.lo: Plot_line_properties.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Plot_line_properties.lo `test -f 'Plot_line_properties.cc' || echo '$(srcdir)/'`Plot_line_properties.cc

lib_gnu_apl_la-Plot_data.lo: Plot_data.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Plot_data.lo `test -f 'Plot_data.cc' || echo '$(srcdir)/'`Plot_data.cc

lib_gnu_apl_la-Plot_window_properties.lo: Plot_window_properties.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Plot_window_properties.lo `test -f 'Plot_window_properties.cc' || echo '$(srcdir)/'`Plot_window_properties.cc

lib_gnu_apl_la-PrimitiveFunction.lo: PrimitiveFunction.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-PrimitiveFunction.lo `test -f 'PrimitiveFunction.cc' || echo '$(srcdir)/'`PrimitiveFunction.cc

lib_gnu_apl_la-PrimitiveOperator.lo: PrimitiveOperator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-PrimitiveOperator.lo `test -f 'PrimitiveOperator.cc' || echo '$(srcdir)/'`PrimitiveOperator.cc

lib_gnu_apl_la-PrintBuffer.lo: PrintBuffer.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-PrintBuffer.lo `test -f 'PrintBuffer.cc' || echo '$(srcdir)/'`PrintBuffer.cc

lib_gnu_apl_la-QuadFunction.lo: QuadFunction.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-QuadFunction.lo `test -f 'QuadFunction.cc' || echo '$(srcdir)/'`QuadFunction.cc

lib_gnu_apl_la-ProcessorID.lo: ProcessorID.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-ProcessorID.lo `test -f 'ProcessorID.cc' || echo '$(srcdir)/'`ProcessorID.cc

lib_gnu_apl_la-Quad_CR.lo: Quad_CR.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_CR.lo `test -f 'Quad_CR.cc' || echo '$(srcdir)/'`Quad_CR.cc

lib_gnu_apl_la-Quad_DLX.lo: Quad_DLX.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_DLX.lo `test -f 'Quad_DLX.cc' || echo '$(srcdir)/'`Quad_DLX.cc

lib_gnu_apl_la-Quad_FFT.lo: Quad_FFT.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_FFT.lo `test -f 'Quad_FFT.cc' || echo '$(srcdir)/'`Quad_FFT.cc

lib_gnu_apl_la-Quad_FIO.lo: Quad_FIO.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_FIO.lo `test -f 'Quad_FIO.cc' || echo '$(srcdir)/'`Quad_FIO.cc

lib_gnu_apl_la-Quad_FX.lo: Quad_FX.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_FX.lo `test -f 'Quad_FX.cc' || echo '$(srcdir)/'`Quad_FX.cc

lib_gnu_apl_la-Quad_GTK.lo: Quad_GTK.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_GTK.lo `test -f 'Quad_GTK.cc' || echo '$(srcdir)/'`Quad_GTK.cc

lib_gnu_apl_la-Quad_JSON.lo: Quad_JSON.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_JSON.lo `test -f 'Quad_JSON.cc' || echo '$(srcdir)/'`Quad_JSON.cc

lib_gnu_apl_la-Quad_MAP.lo: Quad_MAP.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_MAP.lo `test -f 'Quad_MAP.cc' || echo '$(srcdir)/'`Quad_MAP.cc

lib_gnu_apl_la-Quad_PLOT.lo: Quad_PLOT.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_PLOT.lo `test -f 'Quad_PLOT.cc' || echo '$(srcdir)/'`Quad_PLOT.cc

lib_gnu_apl_la-Quad_RE.lo: Quad_RE.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_RE.lo `test -f 'Quad_RE.cc' || echo '$(srcdir)/'`Quad_RE.cc

lib_gnu_apl_la-Quad_RL.lo: Quad_RL.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_RL.lo `test -f 'Quad_RL.cc' || echo '$(srcdir)/'`Quad_RL.cc

lib_gnu_apl_la-Quad_RVAL.lo: Quad_RVAL.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_RVAL.lo `test -f 'Quad_RVAL.cc' || echo '$(srcdir)/'`Quad_RVAL.cc

lib_gnu_apl_la-Quad_SQL.lo: Quad_SQL.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_SQL.lo `test -f 'Quad_SQL.cc' || echo '$(srcdir)/'`Quad_SQL.cc

lib_gnu_apl_la-Quad_SVx.lo: Quad_SVx.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_SVx.lo `test -f 'Quad_SVx.cc' || echo '$(srcdir)/'`Quad_SVx.cc

lib_gnu_apl_la-Quad_TF.lo: Quad_TF.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_TF.lo `test -f 'Quad_TF.cc' || echo '$(srcdir)/'`Quad_TF.cc

lib_gnu_apl_la-Quad_WA.lo: Quad_WA.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_WA.lo `test -f 'Quad_WA.cc' || echo '$(srcdir)/'`Quad_WA.cc

lib_gnu_apl_la-Quad_XML.lo: Quad_XML.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Quad_XML.lo `test -f 'Quad_XML.cc' || echo '$(srcdir)/'`Quad_XML.cc

lib_gnu_apl_la-RealCell.lo: RealCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-RealCell.lo `test -f 'RealCell.cc' || echo '$(srcdir)/'`RealCell.cc

lib_gnu_apl_la-sbrk.lo: sbrk.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-sbrk.lo `test -f 'sbrk.cc' || echo '$(srcdir)/'`sbrk.cc

lib_gnu_apl_la-Shape.lo: Shape.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Shape.lo `test -f 'Shape.cc' || echo '$(srcdir)/'`Shape.cc

lib_gnu_apl_la-ScalarFunction.lo: ScalarFunction.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-ScalarFunction.lo `test -f 'ScalarFunction.cc' || echo '$(srcdir)/'`ScalarFunction.cc

lib_gnu_apl_la-Security.lo: Security.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Security.lo `test -f 'Security.cc' || echo '$(srcdir)/'`Security.cc

lib_gnu_apl_la-StateIndicator.lo: StateIndicator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-StateIndicator.lo `test -f 'StateIndicator.cc' || echo '$(srcdir)/'`StateIndicator.cc

lib_gnu_apl_la-Svar_DB.lo: Svar_DB.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Svar_DB.lo `test -f 'Svar_DB.cc' || echo '$(srcdir)/'`Svar_DB.cc

lib_gnu_apl_la-Svar_record.lo: Svar_record.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Svar_record.lo `test -f 'Svar_record.cc' || echo '$(srcdir)/'`Svar_record.cc

lib_gnu_apl_la-Symbol.lo: Symbol.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Symbol.lo `test -f 'Symbol.cc' || echo '$(srcdir)/'`Symbol.cc

lib_gnu_apl_la-SymbolTable.lo: SymbolTable.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-SymbolTable.lo `test -f 'SymbolTable.cc' || echo '$(srcdir)/'`SymbolTable.cc

lib_gnu_apl_la-SystemVariable.lo: SystemVariable.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-SystemVariable.lo `test -f 'SystemVariable.cc' || echo '$(srcdir)/'`SystemVariable.cc

lib_gnu_apl_la-TabExpansion.lo: TabExpansion.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-TabExpansion.lo `test -f 'TabExpansion.cc' || echo '$(srcdir)/'`TabExpansion.cc

lib_gnu_apl_la-Thread_context.lo: Thread_context.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Thread_context.lo `test -f 'Thread_context.cc' || echo '$(srcdir)/'`Thread_context.cc

lib_gnu_apl_la-Token.lo: Token.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Token.lo `test -f 'Token.cc' || echo '$(srcdir)/'`Token.cc

lib_gnu_apl_la-Tokenizer.lo: Tokenizer.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Tokenizer.lo `test -f 'Tokenizer.cc' || echo '$(srcdir)/'`Tokenizer.cc

lib_gnu_apl_la-UCS_string.lo: UCS_string.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-UCS_string.lo `test -f 'UCS_string.cc' || echo '$(srcdir)/'`UCS_string.cc

lib_gnu_apl_la-UCS_string_vector.lo: UCS_string_vector.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-UCS_string_vector.lo `test -f 'UCS_string_vector.cc' || echo '$(srcdir)/'`UCS_string_vector.cc

lib_gnu_apl_la-UserFunction.lo: UserFunction.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-UserFunction.lo `test -f 'UserFunction.cc' || echo '$(srcdir)/'`UserFunction.cc

lib_gnu_apl_la-UserFunction_header.lo: UserFunction_header.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-UserFunction_header.lo `test -f 'UserFunction_header.cc' || echo '$(srcdir)/'`UserFunction_header.cc

lib_gnu_apl_la-UserPreferences.lo: UserPreferences.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-UserPreferences.lo `test -f 'UserPreferences.cc' || echo '$(srcdir)/'`UserPreferences.cc

lib_gnu_apl_la-UTF8_string.lo: UTF8_string.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-UTF8_string.lo `test -f 'UTF8_string.cc' || echo '$(srcdir)/'`UTF8_string.cc

lib_gnu_apl_la-Value.lo: Value.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Value.lo `test -f 'Value.cc' || echo '$(srcdir)/'`Value.cc

lib_gnu_apl_la-ValueHistory.lo: ValueHistory.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-ValueHistory.lo `test -f 'ValueHistory.cc' || echo '$(srcdir)/'`ValueHistory.cc

lib_gnu_apl_la-Workspace.lo: Workspace.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Workspace.lo `test -f 'Workspace.cc' || echo '$(srcdir)/'`Workspace.cc

lib_gnu_apl_la-static_Objects.lo: static_Objects.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-static_Objects.lo `test -f 'static_Objects.cc' || echo '$(srcdir)/'`static_Objects.cc

lib_gnu_apl_la-Regexp.lo: Regexp.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-Regexp.lo `test -f 'Regexp.cc' || echo '$(srcdir)/'`Regexp.cc

sql/lib_gnu_apl_la-SqliteArgListBuilder.lo: sql/SqliteArgListBuilder.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/lib_gnu_apl_la-SqliteArgListBuilder.lo `test -f 'sql/SqliteArgListBuilder.cc' || echo '$(srcdir)/'`sql/SqliteArgListBuilder.cc

sql/lib_gnu_apl_la-SqliteConnection.lo: sql/SqliteConnection.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/lib_gnu_apl_la-SqliteConnection.lo `test -f 'sql/SqliteConnection.cc' || echo '$(srcdir)/'`sql/SqliteConnection.cc

sql/lib_gnu_apl_la-SqliteResultValue.lo: sql/SqliteResultValue.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/lib_gnu_apl_la-SqliteResultValue.lo `test -f 'sql/SqliteResultValue.cc' || echo '$(srcdir)/'`sql/SqliteResultValue.cc

sql/lib_gnu_apl_la-SqliteProvider.lo: sql/SqliteProvider.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/lib_gnu_apl_la-SqliteProvider.lo `test -f 'sql/SqliteProvider.cc' || echo '$(srcdir)/'`sql/SqliteProvider.cc

sql/lib_gnu_apl_la-Connection.lo: sql/Connection.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/lib_gnu_apl_la-Connection.lo `test -f 'sql/Connection.cc' || echo '$(srcdir)/'`sql/Connection.cc

sql/lib_gnu_apl_la-PostgresArgListBuilder.lo: sql/PostgresArgListBuilder.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/lib_gnu_apl_la-PostgresArgListBuilder.lo `test -f 'sql/PostgresArgListBuilder.cc' || echo '$(srcdir)/'`sql/PostgresArgListBuilder.cc

sql/lib_gnu_apl_la-PostgresConnection.lo: sql/PostgresConnection.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/lib_gnu_apl_la-PostgresConnection.lo `test -f 'sql/PostgresConnection.cc' || echo '$(srcdir)/'`sql/PostgresConnection.cc

sql/lib_gnu_apl_la-PostgresProvider.lo: sql/PostgresProvider.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/lib_gnu_apl_la-PostgresProvider.lo `test -f 'sql/PostgresProvider.cc' || echo '$(srcdir)/'`sql/PostgresProvider.cc

lib_gnu_apl_la-python_apl.lo: python_apl.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_apl_la_CXXFLAGS) $(CXXFLAGS) -c -o lib_gnu_apl_la-python_apl.lo `test -f 'python_apl.cc' || echo '$(srcdir)/'`python_apl.cc

libapl_la-Plot_xcb.lo: Plot_xcb.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Plot_xcb.lo `test -f 'Plot_xcb.cc' || echo '$(srcdir)/'`Plot_xcb.cc

libapl_la-Plot_gtk.lo: Plot_gtk.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Plot_gtk.lo `test -f 'Plot_gtk.cc' || echo '$(srcdir)/'`Plot_gtk.cc

libapl_la-Archive.lo: Archive.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Archive.lo `test -f 'Archive.cc' || echo '$(srcdir)/'`Archive.cc

libapl_la-Assert.lo: Assert.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Assert.lo `test -f 'Assert.cc' || echo '$(srcdir)/'`Assert.cc

libapl_la-Avec.lo: Avec.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Avec.lo `test -f 'Avec.cc' || echo '$(srcdir)/'`Avec.cc

libapl_la-Backtrace.lo: Backtrace.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Backtrace.lo `test -f 'Backtrace.cc' || echo '$(srcdir)/'`Backtrace.cc

libapl_la-Bif_F12_COMMA.lo: Bif_F12_COMMA.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_F12_COMMA.lo `test -f 'Bif_F12_COMMA.cc' || echo '$(srcdir)/'`Bif_F12_COMMA.cc

libapl_la-Bif_F12_DOMINO.lo: Bif_F12_DOMINO.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_F12_DOMINO.lo `test -f 'Bif_F12_DOMINO.cc' || echo '$(srcdir)/'`Bif_F12_DOMINO.cc

libapl_la-Bif_F12_INDEX_OF.lo: Bif_F12_INDEX_OF.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_F12_INDEX_OF.lo `test -f 'Bif_F12_INDEX_OF.cc' || echo '$(srcdir)/'`Bif_F12_INDEX_OF.cc

libapl_la-Bif_F12_INTERVAL_INDEX.lo: Bif_F12_INTERVAL_INDEX.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_F12_INTERVAL_INDEX.lo `test -f 'Bif_F12_INTERVAL_INDEX.cc' || echo '$(srcdir)/'`Bif_F12_INTERVAL_INDEX.cc

libapl_la-Bif_F12_FORMAT.lo: Bif_F12_FORMAT.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_F12_FORMAT.lo `test -f 'Bif_F12_FORMAT.cc' || echo '$(srcdir)/'`Bif_F12_FORMAT.cc

libapl_la-Bif_F12_PARTITION_PICK.lo: Bif_F12_PARTITION_PICK.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_F12_PARTITION_PICK.lo `test -f 'Bif_F12_PARTITION_PICK.cc' || echo '$(srcdir)/'`Bif_F12_PARTITION_PICK.cc

libapl_la-Bif_F12_SORT.lo: Bif_F12_SORT.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_F12_SORT.lo `test -f 'Bif_F12_SORT.cc' || echo '$(srcdir)/'`Bif_F12_SORT.cc

libapl_la-Bif_F12_TAKE_DROP.lo: Bif_F12_TAKE_DROP.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_F12_TAKE_DROP.lo `test -f 'Bif_F12_TAKE_DROP.cc' || echo '$(srcdir)/'`Bif_F12_TAKE_DROP.cc

libapl_la-Bif_OPER1_COMMUTE.lo: Bif_OPER1_COMMUTE.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_OPER1_COMMUTE.lo `test -f 'Bif_OPER1_COMMUTE.cc' || echo '$(srcdir)/'`Bif_OPER1_COMMUTE.cc

libapl_la-Bif_OPER1_EACH.lo: Bif_OPER1_EACH.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_OPER1_EACH.lo `test -f 'Bif_OPER1_EACH.cc' || echo '$(srcdir)/'`Bif_OPER1_EACH.cc

libapl_la-Bif_OPER2_POWER.lo: Bif_OPER2_POWER.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_OPER2_POWER.lo `test -f 'Bif_OPER2_POWER.cc' || echo '$(srcdir)/'`Bif_OPER2_POWER.cc

libapl_la-Bif_OPER2_INNER.lo: Bif_OPER2_INNER.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_OPER2_INNER.lo `test -f 'Bif_OPER2_INNER.cc' || echo '$(srcdir)/'`Bif_OPER2_INNER.cc

libapl_la-Bif_OPER2_OUTER.lo: Bif_OPER2_OUTER.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_OPER2_OUTER.lo `test -f 'Bif_OPER2_OUTER.cc' || echo '$(srcdir)/'`Bif_OPER2_OUTER.cc

libapl_la-Bif_OPER2_RANK.lo: Bif_OPER2_RANK.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_OPER2_RANK.lo `test -f 'Bif_OPER2_RANK.cc' || echo '$(srcdir)/'`Bif_OPER2_RANK.cc

libapl_la-Bif_OPER1_REDUCE.lo: Bif_OPER1_REDUCE.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_OPER1_REDUCE.lo `test -f 'Bif_OPER1_REDUCE.cc' || echo '$(srcdir)/'`Bif_OPER1_REDUCE.cc

libapl_la-Bif_OPER1_SCAN.lo: Bif_OPER1_SCAN.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Bif_OPER1_SCAN.lo `test -f 'Bif_OPER1_SCAN.cc' || echo '$(srcdir)/'`Bif_OPER1_SCAN.cc

libapl_la-CDR.lo: CDR.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-CDR.lo `test -f 'CDR.cc' || echo '$(srcdir)/'`CDR.cc

libapl_la-Cell.lo: Cell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Cell.lo `test -f 'Cell.cc' || echo '$(srcdir)/'`Cell.cc

libapl_la-Doxy.lo: Doxy.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Doxy.lo `test -f 'Doxy.cc' || echo '$(srcdir)/'`Doxy.cc

libapl_la-CharCell.lo: CharCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-CharCell.lo `test -f 'CharCell.cc' || echo '$(srcdir)/'`CharCell.cc

libapl_la-Command.lo: Command.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Command.lo `test -f 'Command.cc' || echo '$(srcdir)/'`Command.cc

libapl_la-Common.lo: Common.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Common.lo `test -f 'Common.cc' || echo '$(srcdir)/'`Common.cc

libapl_la-ComplexCell.lo: ComplexCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-ComplexCell.lo `test -f 'ComplexCell.cc' || echo '$(srcdir)/'`ComplexCell.cc

libapl_la-DerivedFunction.lo: DerivedFunction.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-DerivedFunction.lo `test -f 'DerivedFunction.cc' || echo '$(srcdir)/'`DerivedFunction.cc

libapl_la-DiffOut.lo: DiffOut.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-DiffOut.lo `test -f 'DiffOut.cc' || echo '$(srcdir)/'`DiffOut.cc

libapl_la-DynamicObject.lo: DynamicObject.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-DynamicObject.lo `test -f 'DynamicObject.cc' || echo '$(srcdir)/'`DynamicObject.cc

libapl_la-Error.lo: Error.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Error.lo `test -f 'Error.cc' || echo '$(srcdir)/'`Error.cc

libapl_la-Executable.lo: Executable.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Executable.lo `test -f 'Executable.cc' || echo '$(srcdir)/'`Executable.cc

libapl_la-FloatCell.lo: FloatCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-FloatCell.lo `test -f 'FloatCell.cc' || echo '$(srcdir)/'`FloatCell.cc

libapl_la-Function.lo: Function.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Function.lo `test -f 'Function.cc' || echo '$(srcdir)/'`Function.cc

libapl_la-Id.lo: Id.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Id.lo `test -f 'Id.cc' || echo '$(srcdir)/'`Id.cc

libapl_la-IndexExpr.lo: IndexExpr.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-IndexExpr.lo `test -f 'IndexExpr.cc' || echo '$(srcdir)/'`IndexExpr.cc

libapl_la-IndexIterator.lo: IndexIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-IndexIterator.lo `test -f 'IndexIterator.cc' || echo '$(srcdir)/'`IndexIterator.cc

libapl_la-InputFile.lo: InputFile.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-InputFile.lo `test -f 'InputFile.cc' || echo '$(srcdir)/'`InputFile.cc

libapl_la-IntCell.lo: IntCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-IntCell.lo `test -f 'IntCell.cc' || echo '$(srcdir)/'`IntCell.cc

libapl_la-IO_Files.lo: IO_Files.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-IO_Files.lo `test -f 'IO_Files.cc' || echo '$(srcdir)/'`IO_Files.cc

libapl_la-LApack.lo: LApack.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-LApack.lo `test -f 'LApack.cc' || echo '$(srcdir)/'`LApack.cc

libapl_la-LibPaths.lo: LibPaths.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-LibPaths.lo `test -f 'LibPaths.cc' || echo '$(srcdir)/'`LibPaths.cc

libapl_la-LineInput.lo: LineInput.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-LineInput.lo `test -f 'LineInput.cc' || echo '$(srcdir)/'`LineInput.cc

libapl_la-Logging.lo: Logging.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Logging.lo `test -f 'Logging.cc' || echo '$(srcdir)/'`Logging.cc

libapl_la-LvalCell.lo: LvalCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-LvalCell.lo `test -f 'LvalCell.cc' || echo '$(srcdir)/'`LvalCell.cc

libapl_la-Malloc_hooks.lo: Malloc_hooks.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Malloc_hooks.lo `test -f 'Malloc_hooks.cc' || echo '$(srcdir)/'`Malloc_hooks.cc

libapl_la-Nabla.lo: Nabla.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Nabla.lo `test -f 'Nabla.cc' || echo '$(srcdir)/'`Nabla.cc

libapl_la-Macro.lo: Macro.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Macro.lo `test -f 'Macro.cc' || echo '$(srcdir)/'`Macro.cc

libapl_la-Missing_Libraries.lo: Missing_Libraries.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Missing_Libraries.lo `test -f 'Missing_Libraries.cc' || echo '$(srcdir)/'`Missing_Libraries.cc

libapl_la-NamedObject.lo: NamedObject.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-NamedObject.lo `test -f 'NamedObject.cc' || echo '$(srcdir)/'`NamedObject.cc

libapl_la-NativeFunction.lo: NativeFunction.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-NativeFunction.lo `test -f 'NativeFunction.cc' || echo '$(srcdir)/'`NativeFunction.cc

libapl_la-NumericCell.lo: NumericCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-NumericCell.lo `test -f 'NumericCell.cc' || echo '$(srcdir)/'`NumericCell.cc

libapl_la-Output.lo: Output.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Output.lo `test -f 'Output.cc' || echo '$(srcdir)/'`Output.cc

libapl_la-Parallel.lo: Parallel.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Parallel.lo `test -f 'Parallel.cc' || echo '$(srcdir)/'`Parallel.cc

libapl_la-Parser.lo: Parser.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Parser.lo `test -f 'Parser.cc' || echo '$(srcdir)/'`Parser.cc

libapl_la-Performance.lo: Performance.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Performance.lo `test -f 'Performance.cc' || echo '$(srcdir)/'`Performance.cc

libapl_la-PointerCell.lo: PointerCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-PointerCell.lo `test -f 'PointerCell.cc' || echo '$(srcdir)/'`PointerCell.cc

libapl_la-Prefix.lo: Prefix.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Prefix.lo `test -f 'Prefix.cc' || echo '$(srcdir)/'`Prefix.cc

libapl_la-Plot_line_properties.lo: Plot_line_properties.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Plot_line_properties.lo `test -f 'Plot_line_properties.cc' || echo '$(srcdir)/'`Plot_line_properties.cc

libapl_la-Plot_data.lo: Plot_data.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Plot_data.lo `test -f 'Plot_data.cc' || echo '$(srcdir)/'`Plot_data.cc

libapl_la-Plot_window_properties.lo: Plot_window_properties.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Plot_window_properties.lo `test -f 'Plot_window_properties.cc' || echo '$(srcdir)/'`Plot_window_properties.cc

libapl_la-PrimitiveFunction.lo: PrimitiveFunction.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-PrimitiveFunction.lo `test -f 'PrimitiveFunction.cc' || echo '$(srcdir)/'`PrimitiveFunction.cc

libapl_la-PrimitiveOperator.lo: PrimitiveOperator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-PrimitiveOperator.lo `test -f 'PrimitiveOperator.cc' || echo '$(srcdir)/'`PrimitiveOperator.cc

libapl_la-PrintBuffer.lo: PrintBuffer.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-PrintBuffer.lo `test -f 'PrintBuffer.cc' || echo '$(srcdir)/'`PrintBuffer.cc

libapl_la-QuadFunction.lo: QuadFunction.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-QuadFunction.lo `test -f 'QuadFunction.cc' || echo '$(srcdir)/'`QuadFunction.cc

libapl_la-ProcessorID.lo: ProcessorID.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-ProcessorID.lo `test -f 'ProcessorID.cc' || echo '$(srcdir)/'`ProcessorID.cc

libapl_la-Quad_CR.lo: Quad_CR.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_CR.lo `test -f 'Quad_CR.cc' || echo '$(srcdir)/'`Quad_CR.cc

libapl_la-Quad_DLX.lo: Quad_DLX.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_DLX.lo `test -f 'Quad_DLX.cc' || echo '$(srcdir)/'`Quad_DLX.cc

libapl_la-Quad_FFT.lo: Quad_FFT.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_FFT.lo `test -f 'Quad_FFT.cc' || echo '$(srcdir)/'`Quad_FFT.cc

libapl_la-Quad_FIO.lo: Quad_FIO.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_FIO.lo `test -f 'Quad_FIO.cc' || echo '$(srcdir)/'`Quad_FIO.cc

libapl_la-Quad_FX.lo: Quad_FX.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_FX.lo `test -f 'Quad_FX.cc' || echo '$(srcdir)/'`Quad_FX.cc

libapl_la-Quad_GTK.lo: Quad_GTK.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_GTK.lo `test -f 'Quad_GTK.cc' || echo '$(srcdir)/'`Quad_GTK.cc

libapl_la-Quad_JSON.lo: Quad_JSON.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_JSON.lo `test -f 'Quad_JSON.cc' || echo '$(srcdir)/'`Quad_JSON.cc

libapl_la-Quad_MAP.lo: Quad_MAP.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_MAP.lo `test -f 'Quad_MAP.cc' || echo '$(srcdir)/'`Quad_MAP.cc

libapl_la-Quad_PLOT.lo: Quad_PLOT.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_PLOT.lo `test -f 'Quad_PLOT.cc' || echo '$(srcdir)/'`Quad_PLOT.cc

libapl_la-Quad_RE.lo: Quad_RE.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_RE.lo `test -f 'Quad_RE.cc' || echo '$(srcdir)/'`Quad_RE.cc

libapl_la-Quad_RL.lo: Quad_RL.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_RL.lo `test -f 'Quad_RL.cc' || echo '$(srcdir)/'`Quad_RL.cc

libapl_la-Quad_RVAL.lo: Quad_RVAL.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_RVAL.lo `test -f 'Quad_RVAL.cc' || echo '$(srcdir)/'`Quad_RVAL.cc

libapl_la-Quad_SQL.lo: Quad_SQL.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_SQL.lo `test -f 'Quad_SQL.cc' || echo '$(srcdir)/'`Quad_SQL.cc

libapl_la-Quad_SVx.lo: Quad_SVx.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_SVx.lo `test -f 'Quad_SVx.cc' || echo '$(srcdir)/'`Quad_SVx.cc

libapl_la-Quad_TF.lo: Quad_TF.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_TF.lo `test -f 'Quad_TF.cc' || echo '$(srcdir)/'`Quad_TF.cc

libapl_la-Quad_WA.lo: Quad_WA.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_WA.lo `test -f 'Quad_WA.cc' || echo '$(srcdir)/'`Quad_WA.cc

libapl_la-Quad_XML.lo: Quad_XML.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Quad_XML.lo `test -f 'Quad_XML.cc' || echo '$(srcdir)/'`Quad_XML.cc

libapl_la-RealCell.lo: RealCell.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-RealCell.lo `test -f 'RealCell.cc' || echo '$(srcdir)/'`RealCell.cc

libapl_la-sbrk.lo: sbrk.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-sbrk.lo `test -f 'sbrk.cc' || echo '$(srcdir)/'`sbrk.cc

libapl_la-Shape.lo: Shape.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Shape.lo `test -f 'Shape.cc' || echo '$(srcdir)/'`Shape.cc

libapl_la-ScalarFunction.lo: ScalarFunction.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-ScalarFunction.lo `test -f 'ScalarFunction.cc' || echo '$(srcdir)/'`ScalarFunction.cc

libapl_la-Security.lo: Security.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Security.lo `test -f 'Security.cc' || echo '$(srcdir)/'`Security.cc

libapl_la-StateIndicator.lo: StateIndicator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-StateIndicator.lo `test -f 'StateIndicator.cc' || echo '$(srcdir)/'`StateIndicator.cc

libapl_la-Svar_DB.lo: Svar_DB.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Svar_DB.lo `test -f 'Svar_DB.cc' || echo '$(srcdir)/'`Svar_DB.cc

libapl_la-Svar_record.lo: Svar_record.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Svar_record.lo `test -f 'Svar_record.cc' || echo '$(srcdir)/'`Svar_record.cc

libapl_la-Symbol.lo: Symbol.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Symbol.lo `test -f 'Symbol.cc' || echo '$(srcdir)/'`Symbol.cc

libapl_la-SymbolTable.lo: SymbolTable.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-SymbolTable.lo `test -f 'SymbolTable.cc' || echo '$(srcdir)/'`SymbolTable.cc

libapl_la-SystemVariable.lo: SystemVariable.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-SystemVariable.lo `test -f 'SystemVariable.cc' || echo '$(srcdir)/'`SystemVariable.cc

libapl_la-TabExpansion.lo: TabExpansion.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-TabExpansion.lo `test -f 'TabExpansion.cc' || echo '$(srcdir)/'`TabExpansion.cc

libapl_la-Thread_context.lo: Thread_context.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Thread_context.lo `test -f 'Thread_context.cc' || echo '$(srcdir)/'`Thread_context.cc

libapl_la-Token.lo: Token.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Token.lo `test -f 'Token.cc' || echo '$(srcdir)/'`Token.cc

libapl_la-Tokenizer.lo: Tokenizer.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Tokenizer.lo `test -f 'Tokenizer.cc' || echo '$(srcdir)/'`Tokenizer.cc

libapl_la-UCS_string.lo: UCS_string.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-UCS_string.lo `test -f 'UCS_string.cc' || echo '$(srcdir)/'`UCS_string.cc

libapl_la-UCS_string_vector.lo: UCS_string_vector.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-UCS_string_vector.lo `test -f 'UCS_string_vector.cc' || echo '$(srcdir)/'`UCS_string_vector.cc

libapl_la-UserFunction.lo: UserFunction.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-UserFunction.lo `test -f 'UserFunction.cc' || echo '$(srcdir)/'`UserFunction.cc

libapl_la-UserFunction_header.lo: UserFunction_header.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-UserFunction_header.lo `test -f 'UserFunction_header.cc' || echo '$(srcdir)/'`UserFunction_header.cc

libapl_la-UserPreferences.lo: UserPreferences.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-UserPreferences.lo `test -f 'UserPreferences.cc' || echo '$(srcdir)/'`UserPreferences.cc

libapl_la-UTF8_string.lo: UTF8_string.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-UTF8_string.lo `test -f 'UTF8_string.cc' || echo '$(srcdir)/'`UTF8_string.cc

libapl_la-Value.lo: Value.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Value.lo `test -f 'Value.cc' || echo '$(srcdir)/'`Value.cc

libapl_la-ValueHistory.lo: ValueHistory.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-ValueHistory.lo `test -f 'ValueHistory.cc' || echo '$(srcdir)/'`ValueHistory.cc

libapl_la-Workspace.lo: Workspace.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Workspace.lo `test -f 'Workspace.cc' || echo '$(srcdir)/'`Workspace.cc

libapl_la-static_Objects.lo: static_Objects.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-static_Objects.lo `test -f 'static_Objects.cc' || echo '$(srcdir)/'`static_Objects.cc

libapl_la-Regexp.lo: Regexp.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-Regexp.lo `test -f 'Regexp.cc' || echo '$(srcdir)/'`Regexp.cc

sql/libapl_la-SqliteArgListBuilder.lo: sql/SqliteArgListBuilder.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/libapl_la-SqliteArgListBuilder.lo `test -f 'sql/SqliteArgListBuilder.cc' || echo '$(srcdir)/'`sql/SqliteArgListBuilder.cc

sql/libapl_la-SqliteConnection.lo: sql/SqliteConnection.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/libapl_la-SqliteConnection.lo `test -f 'sql/SqliteConnection.cc' || echo '$(srcdir)/'`sql/SqliteConnection.cc

sql/libapl_la-SqliteResultValue.lo: sql/SqliteResultValue.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/libapl_la-SqliteResultValue.lo `test -f 'sql/SqliteResultValue.cc' || echo '$(srcdir)/'`sql/SqliteResultValue.cc

sql/libapl_la-SqliteProvider.lo: sql/SqliteProvider.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/libapl_la-SqliteProvider.lo `test -f 'sql/SqliteProvider.cc' || echo '$(srcdir)/'`sql/SqliteProvider.cc

sql/libapl_la-Connection.lo: sql/Connection.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/libapl_la-Connection.lo `test -f 'sql/Connection.cc' || echo '$(srcdir)/'`sql/Connection.cc

sql/libapl_la-PostgresArgListBuilder.lo: sql/PostgresArgListBuilder.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/libapl_la-PostgresArgListBuilder.lo `test -f 'sql/PostgresArgListBuilder.cc' || echo '$(srcdir)/'`sql/PostgresArgListBuilder.cc

sql/libapl_la-PostgresConnection.lo: sql/PostgresConnection.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/libapl_la-PostgresConnection.lo `test -f 'sql/PostgresConnection.cc' || echo '$(srcdir)/'`sql/PostgresConnection.cc

sql/libapl_la-PostgresProvider.lo: sql/PostgresProvider.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o sql/libapl_la-PostgresProvider.lo `test -f 'sql/PostgresProvider.cc' || echo '$(srcdir)/'`sql/PostgresProvider.cc

libapl_la-libapl.lo: libapl.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libapl_la_CXXFLAGS) $(CXXFLAGS) -c -o libapl_la-libapl.lo `test -f 'libapl.cc' || echo '$(srcdir)/'`libapl.cc

apl-main.o: main.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-main.o `test -f 'main.cc' || echo '$(srcdir)/'`main.cc

apl-main.obj: main.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-main.obj `if test -f 'main.cc'; then $(CYGPATH_W) 'main.cc'; else $(CYGPATH_W) '$(srcdir)/main.cc'; fi`

apl-Plot_xcb.o: Plot_xcb.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Plot_xcb.o `test -f 'Plot_xcb.cc' || echo '$(srcdir)/'`Plot_xcb.cc

apl-Plot_xcb.obj: Plot_xcb.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Plot_xcb.obj `if test -f 'Plot_xcb.cc'; then $(CYGPATH_W) 'Plot_xcb.cc'; else $(CYGPATH_W) '$(srcdir)/Plot_xcb.cc'; fi`

apl-Plot_gtk.o: Plot_gtk.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Plot_gtk.o `test -f 'Plot_gtk.cc' || echo '$(srcdir)/'`Plot_gtk.cc

apl-Plot_gtk.obj: Plot_gtk.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Plot_gtk.obj `if test -f 'Plot_gtk.cc'; then $(CYGPATH_W) 'Plot_gtk.cc'; else $(CYGPATH_W) '$(srcdir)/Plot_gtk.cc'; fi`

apl-Archive.o: Archive.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Archive.o `test -f 'Archive.cc' || echo '$(srcdir)/'`Archive.cc

apl-Archive.obj: Archive.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Archive.obj `if test -f 'Archive.cc'; then $(CYGPATH_W) 'Archive.cc'; else $(CYGPATH_W) '$(srcdir)/Archive.cc'; fi`

apl-Assert.o: Assert.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Assert.o `test -f 'Assert.cc' || echo '$(srcdir)/'`Assert.cc

apl-Assert.obj: Assert.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Assert.obj `if test -f 'Assert.cc'; then $(CYGPATH_W) 'Assert.cc'; else $(CYGPATH_W) '$(srcdir)/Assert.cc'; fi`

apl-Avec.o: Avec.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Avec.o `test -f 'Avec.cc' || echo '$(srcdir)/'`Avec.cc

apl-Avec.obj: Avec.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Avec.obj `if test -f 'Avec.cc'; then $(CYGPATH_W) 'Avec.cc'; else $(CYGPATH_W) '$(srcdir)/Avec.cc'; fi`

apl-Backtrace.o: Backtrace.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Backtrace.o `test -f 'Backtrace.cc' || echo '$(srcdir)/'`Backtrace.cc

apl-Backtrace.obj: Backtrace.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Backtrace.obj `if test -f 'Backtrace.cc'; then $(CYGPATH_W) 'Backtrace.cc'; else $(CYGPATH_W) '$(srcdir)/Backtrace.cc'; fi`

apl-Bif_F12_COMMA.o: Bif_F12_COMMA.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_COMMA.o `test -f 'Bif_F12_COMMA.cc' || echo '$(srcdir)/'`Bif_F12_COMMA.cc

apl-Bif_F12_COMMA.obj: Bif_F12_COMMA.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_COMMA.obj `if test -f 'Bif_F12_COMMA.cc'; then $(CYGPATH_W) 'Bif_F12_COMMA.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_F12_COMMA.cc'; fi`

apl-Bif_F12_DOMINO.o: Bif_F12_DOMINO.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_DOMINO.o `test -f 'Bif_F12_DOMINO.cc' || echo '$(srcdir)/'`Bif_F12_DOMINO.cc

apl-Bif_F12_DOMINO.obj: Bif_F12_DOMINO.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_DOMINO.obj `if test -f 'Bif_F12_DOMINO.cc'; then $(CYGPATH_W) 'Bif_F12_DOMINO.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_F12_DOMINO.cc'; fi`

apl-Bif_F12_INDEX_OF.o: Bif_F12_INDEX_OF.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_INDEX_OF.o `test -f 'Bif_F12_INDEX_OF.cc' || echo '$(srcdir)/'`Bif_F12_INDEX_OF.cc

apl-Bif_F12_INDEX_OF.obj: Bif_F12_INDEX_OF.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_INDEX_OF.obj `if test -f 'Bif_F12_INDEX_OF.cc'; then $(CYGPATH_W) 'Bif_F12_INDEX_OF.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_F12_INDEX_OF.cc'; fi`

apl-Bif_F12_INTERVAL_INDEX.o: Bif_F12_INTERVAL_INDEX.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_INTERVAL_INDEX.o `test -f 'Bif_F12_INTERVAL_INDEX.cc' || echo '$(srcdir)/'`Bif_F12_INTERVAL_INDEX.cc

apl-Bif_F12_INTERVAL_INDEX.obj: Bif_F12_INTERVAL_INDEX.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_INTERVAL_INDEX.obj `if test -f 'Bif_F12_INTERVAL_INDEX.cc'; then $(CYGPATH_W) 'Bif_F12_INTERVAL_INDEX.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_F12_INTERVAL_INDEX.cc'; fi`

apl-Bif_F12_FORMAT.o: Bif_F12_FORMAT.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_FORMAT.o `test -f 'Bif_F12_FORMAT.cc' || echo '$(srcdir)/'`Bif_F12_FORMAT.cc

apl-Bif_F12_FORMAT.obj: Bif_F12_FORMAT.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_FORMAT.obj `if test -f 'Bif_F12_FORMAT.cc'; then $(CYGPATH_W) 'Bif_F12_FORMAT.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_F12_FORMAT.cc'; fi`

apl-Bif_F12_PARTITION_PICK.o: Bif_F12_PARTITION_PICK.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_PARTITION_PICK.o `test -f 'Bif_F12_PARTITION_PICK.cc' || echo '$(srcdir)/'`Bif_F12_PARTITION_PICK.cc

apl-Bif_F12_PARTITION_PICK.obj: Bif_F12_PARTITION_PICK.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_PARTITION_PICK.obj `if test -f 'Bif_F12_PARTITION_PICK.cc'; then $(CYGPATH_W) 'Bif_F12_PARTITION_PICK.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_F12_PARTITION_PICK.cc'; fi`

apl-Bif_F12_SORT.o: Bif_F12_SORT.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_SORT.o `test -f 'Bif_F12_SORT.cc' || echo '$(srcdir)/'`Bif_F12_SORT.cc

apl-Bif_F12_SORT.obj: Bif_F12_SORT.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_SORT.obj `if test -f 'Bif_F12_SORT.cc'; then $(CYGPATH_W) 'Bif_F12_SORT.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_F12_SORT.cc'; fi`

apl-Bif_F12_TAKE_DROP.o: Bif_F12_TAKE_DROP.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_TAKE_DROP.o `test -f 'Bif_F12_TAKE_DROP.cc' || echo '$(srcdir)/'`Bif_F12_TAKE_DROP.cc

apl-Bif_F12_TAKE_DROP.obj: Bif_F12_TAKE_DROP.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_F12_TAKE_DROP.obj `if test -f 'Bif_F12_TAKE_DROP.cc'; then $(CYGPATH_W) 'Bif_F12_TAKE_DROP.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_F12_TAKE_DROP.cc'; fi`

apl-Bif_OPER1_COMMUTE.o: Bif_OPER1_COMMUTE.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER1_COMMUTE.o `test -f 'Bif_OPER1_COMMUTE.cc' || echo '$(srcdir)/'`Bif_OPER1_COMMUTE.cc

apl-Bif_OPER1_COMMUTE.obj: Bif_OPER1_COMMUTE.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER1_COMMUTE.obj `if test -f 'Bif_OPER1_COMMUTE.cc'; then $(CYGPATH_W) 'Bif_OPER1_COMMUTE.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_OPER1_COMMUTE.cc'; fi`

apl-Bif_OPER1_EACH.o: Bif_OPER1_EACH.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER1_EACH.o `test -f 'Bif_OPER1_EACH.cc' || echo '$(srcdir)/'`Bif_OPER1_EACH.cc

apl-Bif_OPER1_EACH.obj: Bif_OPER1_EACH.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER1_EACH.obj `if test -f 'Bif_OPER1_EACH.cc'; then $(CYGPATH_W) 'Bif_OPER1_EACH.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_OPER1_EACH.cc'; fi`

apl-Bif_OPER2_POWER.o: Bif_OPER2_POWER.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER2_POWER.o `test -f 'Bif_OPER2_POWER.cc' || echo '$(srcdir)/'`Bif_OPER2_POWER.cc

apl-Bif_OPER2_POWER.obj: Bif_OPER2_POWER.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER2_POWER.obj `if test -f 'Bif_OPER2_POWER.cc'; then $(CYGPATH_W) 'Bif_OPER2_POWER.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_OPER2_POWER.cc'; fi`

apl-Bif_OPER2_INNER.o: Bif_OPER2_INNER.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER2_INNER.o `test -f 'Bif_OPER2_INNER.cc' || echo '$(srcdir)/'`Bif_OPER2_INNER.cc

apl-Bif_OPER2_INNER.obj: Bif_OPER2_INNER.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER2_INNER.obj `if test -f 'Bif_OPER2_INNER.cc'; then $(CYGPATH_W) 'Bif_OPER2_INNER.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_OPER2_INNER.cc'; fi`

apl-Bif_OPER2_OUTER.o: Bif_OPER2_OUTER.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER2_OUTER.o `test -f 'Bif_OPER2_OUTER.cc' || echo '$(srcdir)/'`Bif_OPER2_OUTER.cc

apl-Bif_OPER2_OUTER.obj: Bif_OPER2_OUTER.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER2_OUTER.obj `if test -f 'Bif_OPER2_OUTER.cc'; then $(CYGPATH_W) 'Bif_OPER2_OUTER.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_OPER2_OUTER.cc'; fi`

apl-Bif_OPER2_RANK.o: Bif_OPER2_RANK.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER2_RANK.o `test -f 'Bif_OPER2_RANK.cc' || echo '$(srcdir)/'`Bif_OPER2_RANK.cc

apl-Bif_OPER2_RANK.obj: Bif_OPER2_RANK.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER2_RANK.obj `if test -f 'Bif_OPER2_RANK.cc'; then $(CYGPATH_W) 'Bif_OPER2_RANK.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_OPER2_RANK.cc'; fi`

apl-Bif_OPER1_REDUCE.o: Bif_OPER1_REDUCE.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER1_REDUCE.o `test -f 'Bif_OPER1_REDUCE.cc' || echo '$(srcdir)/'`Bif_OPER1_REDUCE.cc

apl-Bif_OPER1_REDUCE.obj: Bif_OPER1_REDUCE.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER1_REDUCE.obj `if test -f 'Bif_OPER1_REDUCE.cc'; then $(CYGPATH_W) 'Bif_OPER1_REDUCE.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_OPER1_REDUCE.cc'; fi`

apl-Bif_OPER1_SCAN.o: Bif_OPER1_SCAN.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER1_SCAN.o `test -f 'Bif_OPER1_SCAN.cc' || echo '$(srcdir)/'`Bif_OPER1_SCAN.cc

apl-Bif_OPER1_SCAN.obj: Bif_OPER1_SCAN.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Bif_OPER1_SCAN.obj `if test -f 'Bif_OPER1_SCAN.cc'; then $(CYGPATH_W) 'Bif_OPER1_SCAN.cc'; else $(CYGPATH_W) '$(srcdir)/Bif_OPER1_SCAN.cc'; fi`

apl-CDR.o: CDR.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-CDR.o `test -f 'CDR.cc' || echo '$(srcdir)/'`CDR.cc

apl-CDR.obj: CDR.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-CDR.obj `if test -f 'CDR.cc'; then $(CYGPATH_W) 'CDR.cc'; else $(CYGPATH_W) '$(srcdir)/CDR.cc'; fi`

apl-Cell.o: Cell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Cell.o `test -f 'Cell.cc' || echo '$(srcdir)/'`Cell.cc

apl-Cell.obj: Cell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Cell.obj `if test -f 'Cell.cc'; then $(CYGPATH_W) 'Cell.cc'; else $(CYGPATH_W) '$(srcdir)/Cell.cc'; fi`

apl-Doxy.o: Doxy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Doxy.o `test -f 'Doxy.cc' || echo '$(srcdir)/'`Doxy.cc

apl-Doxy.obj: Doxy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Doxy.obj `if test -f 'Doxy.cc'; then $(CYGPATH_W) 'Doxy.cc'; else $(CYGPATH_W) '$(srcdir)/Doxy.cc'; fi`

apl-CharCell.o: CharCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-CharCell.o `test -f 'CharCell.cc' || echo '$(srcdir)/'`CharCell.cc

apl-CharCell.obj: CharCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-CharCell.obj `if test -f 'CharCell.cc'; then $(CYGPATH_W) 'CharCell.cc'; else $(CYGPATH_W) '$(srcdir)/CharCell.cc'; fi`

apl-Command.o: Command.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Command.o `test -f 'Command.cc' || echo '$(srcdir)/'`Command.cc

apl-Command.obj: Command.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Command.obj `if test -f 'Command.cc'; then $(CYGPATH_W) 'Command.cc'; else $(CYGPATH_W) '$(srcdir)/Command.cc'; fi`

apl-Common.o: Common.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Common.o `test -f 'Common.cc' || echo '$(srcdir)/'`Common.cc

apl-Common.obj: Common.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Common.obj `if test -f 'Common.cc'; then $(CYGPATH_W) 'Common.cc'; else $(CYGPATH_W) '$(srcdir)/Common.cc'; fi`

apl-ComplexCell.o: ComplexCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-ComplexCell.o `test -f 'ComplexCell.cc' || echo '$(srcdir)/'`ComplexCell.cc

apl-ComplexCell.obj: ComplexCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-ComplexCell.obj `if test -f 'ComplexCell.cc'; then $(CYGPATH_W) 'ComplexCell.cc'; else $(CYGPATH_W) '$(srcdir)/ComplexCell.cc'; fi`

apl-DerivedFunction.o: DerivedFunction.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-DerivedFunction.o `test -f 'DerivedFunction.cc' || echo '$(srcdir)/'`DerivedFunction.cc

apl-DerivedFunction.obj: DerivedFunction.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-DerivedFunction.obj `if test -f 'DerivedFunction.cc'; then $(CYGPATH_W) 'DerivedFunction.cc'; else $(CYGPATH_W) '$(srcdir)/DerivedFunction.cc'; fi`

apl-DiffOut.o: DiffOut.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-DiffOut.o `test -f 'DiffOut.cc' || echo '$(srcdir)/'`DiffOut.cc

apl-DiffOut.obj: DiffOut.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-DiffOut.obj `if test -f 'DiffOut.cc'; then $(CYGPATH_W) 'DiffOut.cc'; else $(CYGPATH_W) '$(srcdir)/DiffOut.cc'; fi`

apl-DynamicObject.o: DynamicObject.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-DynamicObject.o `test -f 'DynamicObject.cc' || echo '$(srcdir)/'`DynamicObject.cc

apl-DynamicObject.obj: DynamicObject.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-DynamicObject.obj `if test -f 'DynamicObject.cc'; then $(CYGPATH_W) 'DynamicObject.cc'; else $(CYGPATH_W) '$(srcdir)/DynamicObject.cc'; fi`

apl-Error.o: Error.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Error.o `test -f 'Error.cc' || echo '$(srcdir)/'`Error.cc

apl-Error.obj: Error.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Error.obj `if test -f 'Error.cc'; then $(CYGPATH_W) 'Error.cc'; else $(CYGPATH_W) '$(srcdir)/Error.cc'; fi`

apl-Executable.o: Executable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Executable.o `test -f 'Executable.cc' || echo '$(srcdir)/'`Executable.cc

apl-Executable.obj: Executable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Executable.obj `if test -f 'Executable.cc'; then $(CYGPATH_W) 'Executable.cc'; else $(CYGPATH_W) '$(srcdir)/Executable.cc'; fi`

apl-FloatCell.o: FloatCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-FloatCell.o `test -f 'FloatCell.cc' || echo '$(srcdir)/'`FloatCell.cc

apl-FloatCell.obj: FloatCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-FloatCell.obj `if test -f 'FloatCell.cc'; then $(CYGPATH_W) 'FloatCell.cc'; else $(CYGPATH_W) '$(srcdir)/FloatCell.cc'; fi`

apl-Function.o: Function.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Function.o `test -f 'Function.cc' || echo '$(srcdir)/'`Function.cc

apl-Function.obj: Function.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Function.obj `if test -f 'Function.cc'; then $(CYGPATH_W) 'Function.cc'; else $(CYGPATH_W) '$(srcdir)/Function.cc'; fi`

apl-Id.o: Id.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Id.o `test -f 'Id.cc' || echo '$(srcdir)/'`Id.cc

apl-Id.obj: Id.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Id.obj `if test -f 'Id.cc'; then $(CYGPATH_W) 'Id.cc'; else $(CYGPATH_W) '$(srcdir)/Id.cc'; fi`

apl-IndexExpr.o: IndexExpr.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-IndexExpr.o `test -f 'IndexExpr.cc' || echo '$(srcdir)/'`IndexExpr.cc

apl-IndexExpr.obj: IndexExpr.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-IndexExpr.obj `if test -f 'IndexExpr.cc'; then $(CYGPATH_W) 'IndexExpr.cc'; else $(CYGPATH_W) '$(srcdir)/IndexExpr.cc'; fi`

apl-IndexIterator.o: IndexIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-IndexIterator.o `test -f 'IndexIterator.cc' || echo '$(srcdir)/'`IndexIterator.cc

apl-IndexIterator.obj: IndexIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-IndexIterator.obj `if test -f 'IndexIterator.cc'; then $(CYGPATH_W) 'IndexIterator.cc'; else $(CYGPATH_W) '$(srcdir)/IndexIterator.cc'; fi`

apl-InputFile.o: InputFile.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-InputFile.o `test -f 'InputFile.cc' || echo '$(srcdir)/'`InputFile.cc

apl-InputFile.obj: InputFile.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-InputFile.obj `if test -f 'InputFile.cc'; then $(CYGPATH_W) 'InputFile.cc'; else $(CYGPATH_W) '$(srcdir)/InputFile.cc'; fi`

apl-IntCell.o: IntCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-IntCell.o `test -f 'IntCell.cc' || echo '$(srcdir)/'`IntCell.cc

apl-IntCell.obj: IntCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-IntCell.obj `if test -f 'IntCell.cc'; then $(CYGPATH_W) 'IntCell.cc'; else $(CYGPATH_W) '$(srcdir)/IntCell.cc'; fi`

apl-IO_Files.o: IO_Files.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-IO_Files.o `test -f 'IO_Files.cc' || echo '$(srcdir)/'`IO_Files.cc

apl-IO_Files.obj: IO_Files.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-IO_Files.obj `if test -f 'IO_Files.cc'; then $(CYGPATH_W) 'IO_Files.cc'; else $(CYGPATH_W) '$(srcdir)/IO_Files.cc'; fi`

apl-LApack.o: LApack.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-LApack.o `test -f 'LApack.cc' || echo '$(srcdir)/'`LApack.cc

apl-LApack.obj: LApack.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-LApack.obj `if test -f 'LApack.cc'; then $(CYGPATH_W) 'LApack.cc'; else $(CYGPATH_W) '$(srcdir)/LApack.cc'; fi`

apl-LibPaths.o: LibPaths.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-LibPaths.o `test -f 'LibPaths.cc' || echo '$(srcdir)/'`LibPaths.cc

apl-LibPaths.obj: LibPaths.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-LibPaths.obj `if test -f 'LibPaths.cc'; then $(CYGPATH_W) 'LibPaths.cc'; else $(CYGPATH_W) '$(srcdir)/LibPaths.cc'; fi`

apl-LineInput.o: LineInput.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-LineInput.o `test -f 'LineInput.cc' || echo '$(srcdir)/'`LineInput.cc

apl-LineInput.obj: LineInput.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-LineInput.obj `if test -f 'LineInput.cc'; then $(CYGPATH_W) 'LineInput.cc'; else $(CYGPATH_W) '$(srcdir)/LineInput.cc'; fi`

apl-Logging.o: Logging.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Logging.o `test -f 'Logging.cc' || echo '$(srcdir)/'`Logging.cc

apl-Logging.obj: Logging.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Logging.obj `if test -f 'Logging.cc'; then $(CYGPATH_W) 'Logging.cc'; else $(CYGPATH_W) '$(srcdir)/Logging.cc'; fi`

apl-LvalCell.o: LvalCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-LvalCell.o `test -f 'LvalCell.cc' || echo '$(srcdir)/'`LvalCell.cc

apl-LvalCell.obj: LvalCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-LvalCell.obj `if test -f 'LvalCell.cc'; then $(CYGPATH_W) 'LvalCell.cc'; else $(CYGPATH_W) '$(srcdir)/LvalCell.cc'; fi`

apl-Malloc_hooks.o: Malloc_hooks.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Malloc_hooks.o `test -f 'Malloc_hooks.cc' || echo '$(srcdir)/'`Malloc_hooks.cc

apl-Malloc_hooks.obj: Malloc_hooks.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Malloc_hooks.obj `if test -f 'Malloc_hooks.cc'; then $(CYGPATH_W) 'Malloc_hooks.cc'; else $(CYGPATH_W) '$(srcdir)/Malloc_hooks.cc'; fi`

apl-Nabla.o: Nabla.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Nabla.o `test -f 'Nabla.cc' || echo '$(srcdir)/'`Nabla.cc

apl-Nabla.obj: Nabla.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Nabla.obj `if test -f 'Nabla.cc'; then $(CYGPATH_W) 'Nabla.cc'; else $(CYGPATH_W) '$(srcdir)/Nabla.cc'; fi`

apl-Macro.o: Macro.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Macro.o `test -f 'Macro.cc' || echo '$(srcdir)/'`Macro.cc

apl-Macro.obj: Macro.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Macro.obj `if test -f 'Macro.cc'; then $(CYGPATH_W) 'Macro.cc'; else $(CYGPATH_W) '$(srcdir)/Macro.cc'; fi`

apl-Missing_Libraries.o: Missing_Libraries.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Missing_Libraries.o `test -f 'Missing_Libraries.cc' || echo '$(srcdir)/'`Missing_Libraries.cc

apl-Missing_Libraries.obj: Missing_Libraries.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Missing_Libraries.obj `if test -f 'Missing_Libraries.cc'; then $(CYGPATH_W) 'Missing_Libraries.cc'; else $(CYGPATH_W) '$(srcdir)/Missing_Libraries.cc'; fi`

apl-NamedObject.o: NamedObject.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-NamedObject.o `test -f 'NamedObject.cc' || echo '$(srcdir)/'`NamedObject.cc

apl-NamedObject.obj: NamedObject.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-NamedObject.obj `if test -f 'NamedObject.cc'; then $(CYGPATH_W) 'NamedObject.cc'; else $(CYGPATH_W) '$(srcdir)/NamedObject.cc'; fi`

apl-NativeFunction.o: NativeFunction.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-NativeFunction.o `test -f 'NativeFunction.cc' || echo '$(srcdir)/'`NativeFunction.cc

apl-NativeFunction.obj: NativeFunction.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-NativeFunction.obj `if test -f 'NativeFunction.cc'; then $(CYGPATH_W) 'NativeFunction.cc'; else $(CYGPATH_W) '$(srcdir)/NativeFunction.cc'; fi`

apl-NumericCell.o: NumericCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-NumericCell.o `test -f 'NumericCell.cc' || echo '$(srcdir)/'`NumericCell.cc

apl-NumericCell.obj: NumericCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-NumericCell.obj `if test -f 'NumericCell.cc'; then $(CYGPATH_W) 'NumericCell.cc'; else $(CYGPATH_W) '$(srcdir)/NumericCell.cc'; fi`

apl-Output.o: Output.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Output.o `test -f 'Output.cc' || echo '$(srcdir)/'`Output.cc

apl-Output.obj: Output.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Output.obj `if test -f 'Output.cc'; then $(CYGPATH_W) 'Output.cc'; else $(CYGPATH_W) '$(srcdir)/Output.cc'; fi`

apl-Parallel.o: Parallel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Parallel.o `test -f 'Parallel.cc' || echo '$(srcdir)/'`Parallel.cc

apl-Parallel.obj: Parallel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Parallel.obj `if test -f 'Parallel.cc'; then $(CYGPATH_W) 'Parallel.cc'; else $(CYGPATH_W) '$(srcdir)/Parallel.cc'; fi`

apl-Parser.o: Parser.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Parser.o `test -f 'Parser.cc' || echo '$(srcdir)/'`Parser.cc

apl-Parser.obj: Parser.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Parser.obj `if test -f 'Parser.cc'; then $(CYGPATH_W) 'Parser.cc'; else $(CYGPATH_W) '$(srcdir)/Parser.cc'; fi`

apl-Performance.o: Performance.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Performance.o `test -f 'Performance.cc' || echo '$(srcdir)/'`Performance.cc

apl-Performance.obj: Performance.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Performance.obj `if test -f 'Performance.cc'; then $(CYGPATH_W) 'Performance.cc'; else $(CYGPATH_W) '$(srcdir)/Performance.cc'; fi`

apl-PointerCell.o: PointerCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-PointerCell.o `test -f 'PointerCell.cc' || echo '$(srcdir)/'`PointerCell.cc

apl-PointerCell.obj: PointerCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-PointerCell.obj `if test -f 'PointerCell.cc'; then $(CYGPATH_W) 'PointerCell.cc'; else $(CYGPATH_W) '$(srcdir)/PointerCell.cc'; fi`

apl-Prefix.o: Prefix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Prefix.o `test -f 'Prefix.cc' || echo '$(srcdir)/'`Prefix.cc

apl-Prefix.obj: Prefix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Prefix.obj `if test -f 'Prefix.cc'; then $(CYGPATH_W) 'Prefix.cc'; else $(CYGPATH_W) '$(srcdir)/Prefix.cc'; fi`

apl-Plot_line_properties.o: Plot_line_properties.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Plot_line_properties.o `test -f 'Plot_line_properties.cc' || echo '$(srcdir)/'`Plot_line_properties.cc

apl-Plot_line_properties.obj: Plot_line_properties.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Plot_line_properties.obj `if test -f 'Plot_line_properties.cc'; then $(CYGPATH_W) 'Plot_line_properties.cc'; else $(CYGPATH_W) '$(srcdir)/Plot_line_properties.cc'; fi`

apl-Plot_data.o: Plot_data.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Plot_data.o `test -f 'Plot_data.cc' || echo '$(srcdir)/'`Plot_data.cc

apl-Plot_data.obj: Plot_data.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Plot_data.obj `if test -f 'Plot_data.cc'; then $(CYGPATH_W) 'Plot_data.cc'; else $(CYGPATH_W) '$(srcdir)/Plot_data.cc'; fi`

apl-Plot_window_properties.o: Plot_window_properties.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Plot_window_properties.o `test -f 'Plot_window_properties.cc' || echo '$(srcdir)/'`Plot_window_properties.cc

apl-Plot_window_properties.obj: Plot_window_properties.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Plot_window_properties.obj `if test -f 'Plot_window_properties.cc'; then $(CYGPATH_W) 'Plot_window_properties.cc'; else $(CYGPATH_W) '$(srcdir)/Plot_window_properties.cc'; fi`

apl-PrimitiveFunction.o: PrimitiveFunction.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-PrimitiveFunction.o `test -f 'PrimitiveFunction.cc' || echo '$(srcdir)/'`PrimitiveFunction.cc

apl-PrimitiveFunction.obj: PrimitiveFunction.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-PrimitiveFunction.obj `if test -f 'PrimitiveFunction.cc'; then $(CYGPATH_W) 'PrimitiveFunction.cc'; else $(CYGPATH_W) '$(srcdir)/PrimitiveFunction.cc'; fi`

apl-PrimitiveOperator.o: PrimitiveOperator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-PrimitiveOperator.o `test -f 'PrimitiveOperator.cc' || echo '$(srcdir)/'`PrimitiveOperator.cc

apl-PrimitiveOperator.obj: PrimitiveOperator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-PrimitiveOperator.obj `if test -f 'PrimitiveOperator.cc'; then $(CYGPATH_W) 'PrimitiveOperator.cc'; else $(CYGPATH_W) '$(srcdir)/PrimitiveOperator.cc'; fi`

apl-PrintBuffer.o: PrintBuffer.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-PrintBuffer.o `test -f 'PrintBuffer.cc' || echo '$(srcdir)/'`PrintBuffer.cc

apl-PrintBuffer.obj: PrintBuffer.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-PrintBuffer.obj `if test -f 'PrintBuffer.cc'; then $(CYGPATH_W) 'PrintBuffer.cc'; else $(CYGPATH_W) '$(srcdir)/PrintBuffer.cc'; fi`

apl-QuadFunction.o: QuadFunction.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-QuadFunction.o `test -f 'QuadFunction.cc' || echo '$(srcdir)/'`QuadFunction.cc

apl-QuadFunction.obj: QuadFunction.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-QuadFunction.obj `if test -f 'QuadFunction.cc'; then $(CYGPATH_W) 'QuadFunction.cc'; else $(CYGPATH_W) '$(srcdir)/QuadFunction.cc'; fi`

apl-ProcessorID.o: ProcessorID.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-ProcessorID.o `test -f 'ProcessorID.cc' || echo '$(srcdir)/'`ProcessorID.cc

apl-ProcessorID.obj: ProcessorID.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-ProcessorID.obj `if test -f 'ProcessorID.cc'; then $(CYGPATH_W) 'ProcessorID.cc'; else $(CYGPATH_W) '$(srcdir)/ProcessorID.cc'; fi`

apl-Quad_CR.o: Quad_CR.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_CR.o `test -f 'Quad_CR.cc' || echo '$(srcdir)/'`Quad_CR.cc

apl-Quad_CR.obj: Quad_CR.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_CR.obj `if test -f 'Quad_CR.cc'; then $(CYGPATH_W) 'Quad_CR.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_CR.cc'; fi`

apl-Quad_DLX.o: Quad_DLX.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_DLX.o `test -f 'Quad_DLX.cc' || echo '$(srcdir)/'`Quad_DLX.cc

apl-Quad_DLX.obj: Quad_DLX.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_DLX.obj `if test -f 'Quad_DLX.cc'; then $(CYGPATH_W) 'Quad_DLX.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_DLX.cc'; fi`

apl-Quad_FFT.o: Quad_FFT.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_FFT.o `test -f 'Quad_FFT.cc' || echo '$(srcdir)/'`Quad_FFT.cc

apl-Quad_FFT.obj: Quad_FFT.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_FFT.obj `if test -f 'Quad_FFT.cc'; then $(CYGPATH_W) 'Quad_FFT.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_FFT.cc'; fi`

apl-Quad_FIO.o: Quad_FIO.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_FIO.o `test -f 'Quad_FIO.cc' || echo '$(srcdir)/'`Quad_FIO.cc

apl-Quad_FIO.obj: Quad_FIO.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_FIO.obj `if test -f 'Quad_FIO.cc'; then $(CYGPATH_W) 'Quad_FIO.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_FIO.cc'; fi`

apl-Quad_FX.o: Quad_FX.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_FX.o `test -f 'Quad_FX.cc' || echo '$(srcdir)/'`Quad_FX.cc

apl-Quad_FX.obj: Quad_FX.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_FX.obj `if test -f 'Quad_FX.cc'; then $(CYGPATH_W) 'Quad_FX.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_FX.cc'; fi`

apl-Quad_GTK.o: Quad_GTK.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_GTK.o `test -f 'Quad_GTK.cc' || echo '$(srcdir)/'`Quad_GTK.cc

apl-Quad_GTK.obj: Quad_GTK.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_GTK.obj `if test -f 'Quad_GTK.cc'; then $(CYGPATH_W) 'Quad_GTK.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_GTK.cc'; fi`

apl-Quad_JSON.o: Quad_JSON.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_JSON.o `test -f 'Quad_JSON.cc' || echo '$(srcdir)/'`Quad_JSON.cc

apl-Quad_JSON.obj: Quad_JSON.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_JSON.obj `if test -f 'Quad_JSON.cc'; then $(CYGPATH_W) 'Quad_JSON.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_JSON.cc'; fi`

apl-Quad_MAP.o: Quad_MAP.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_MAP.o `test -f 'Quad_MAP.cc' || echo '$(srcdir)/'`Quad_MAP.cc

apl-Quad_MAP.obj: Quad_MAP.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_MAP.obj `if test -f 'Quad_MAP.cc'; then $(CYGPATH_W) 'Quad_MAP.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_MAP.cc'; fi`

apl-Quad_PLOT.o: Quad_PLOT.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_PLOT.o `test -f 'Quad_PLOT.cc' || echo '$(srcdir)/'`Quad_PLOT.cc

apl-Quad_PLOT.obj: Quad_PLOT.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_PLOT.obj `if test -f 'Quad_PLOT.cc'; then $(CYGPATH_W) 'Quad_PLOT.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_PLOT.cc'; fi`

apl-Quad_RE.o: Quad_RE.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_RE.o `test -f 'Quad_RE.cc' || echo '$(srcdir)/'`Quad_RE.cc

apl-Quad_RE.obj: Quad_RE.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_RE.obj `if test -f 'Quad_RE.cc'; then $(CYGPATH_W) 'Quad_RE.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_RE.cc'; fi`

apl-Quad_RL.o: Quad_RL.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_RL.o `test -f 'Quad_RL.cc' || echo '$(srcdir)/'`Quad_RL.cc

apl-Quad_RL.obj: Quad_RL.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_RL.obj `if test -f 'Quad_RL.cc'; then $(CYGPATH_W) 'Quad_RL.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_RL.cc'; fi`

apl-Quad_RVAL.o: Quad_RVAL.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_RVAL.o `test -f 'Quad_RVAL.cc' || echo '$(srcdir)/'`Quad_RVAL.cc

apl-Quad_RVAL.obj: Quad_RVAL.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_RVAL.obj `if test -f 'Quad_RVAL.cc'; then $(CYGPATH_W) 'Quad_RVAL.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_RVAL.cc'; fi`

apl-Quad_SQL.o: Quad_SQL.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_SQL.o `test -f 'Quad_SQL.cc' || echo '$(srcdir)/'`Quad_SQL.cc

apl-Quad_SQL.obj: Quad_SQL.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_SQL.obj `if test -f 'Quad_SQL.cc'; then $(CYGPATH_W) 'Quad_SQL.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_SQL.cc'; fi`

apl-Quad_SVx.o: Quad_SVx.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_SVx.o `test -f 'Quad_SVx.cc' || echo '$(srcdir)/'`Quad_SVx.cc

apl-Quad_SVx.obj: Quad_SVx.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_SVx.obj `if test -f 'Quad_SVx.cc'; then $(CYGPATH_W) 'Quad_SVx.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_SVx.cc'; fi`

apl-Quad_TF.o: Quad_TF.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_TF.o `test -f 'Quad_TF.cc' || echo '$(srcdir)/'`Quad_TF.cc

apl-Quad_TF.obj: Quad_TF.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_TF.obj `if test -f 'Quad_TF.cc'; then $(CYGPATH_W) 'Quad_TF.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_TF.cc'; fi`

apl-Quad_WA.o: Quad_WA.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_WA.o `test -f 'Quad_WA.cc' || echo '$(srcdir)/'`Quad_WA.cc

apl-Quad_WA.obj: Quad_WA.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_WA.obj `if test -f 'Quad_WA.cc'; then $(CYGPATH_W) 'Quad_WA.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_WA.cc'; fi`

apl-Quad_XML.o: Quad_XML.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_XML.o `test -f 'Quad_XML.cc' || echo '$(srcdir)/'`Quad_XML.cc

apl-Quad_XML.obj: Quad_XML.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Quad_XML.obj `if test -f 'Quad_XML.cc'; then $(CYGPATH_W) 'Quad_XML.cc'; else $(CYGPATH_W) '$(srcdir)/Quad_XML.cc'; fi`

apl-RealCell.o: RealCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-RealCell.o `test -f 'RealCell.cc' || echo '$(srcdir)/'`RealCell.cc

apl-RealCell.obj: RealCell.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-RealCell.obj `if test -f 'RealCell.cc'; then $(CYGPATH_W) 'RealCell.cc'; else $(CYGPATH_W) '$(srcdir)/RealCell.cc'; fi`

apl-sbrk.o: sbrk.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-sbrk.o `test -f 'sbrk.cc' || echo '$(srcdir)/'`sbrk.cc

apl-sbrk.obj: sbrk.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-sbrk.obj `if test -f 'sbrk.cc'; then $(CYGPATH_W) 'sbrk.cc'; else $(CYGPATH_W) '$(srcdir)/sbrk.cc'; fi`

apl-Shape.o: Shape.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Shape.o `test -f 'Shape.cc' || echo '$(srcdir)/'`Shape.cc

apl-Shape.obj: Shape.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Shape.obj `if test -f 'Shape.cc'; then $(CYGPATH_W) 'Shape.cc'; else $(CYGPATH_W) '$(srcdir)/Shape.cc'; fi`

apl-ScalarFunction.o: ScalarFunction.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-ScalarFunction.o `test -f 'ScalarFunction.cc' || echo '$(srcdir)/'`ScalarFunction.cc

apl-ScalarFunction.obj: ScalarFunction.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-ScalarFunction.obj `if test -f 'ScalarFunction.cc'; then $(CYGPATH_W) 'ScalarFunction.cc'; else $(CYGPATH_W) '$(srcdir)/ScalarFunction.cc'; fi`

apl-Security.o: Security.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Security.o `test -f 'Security.cc' || echo '$(srcdir)/'`Security.cc

apl-Security.obj: Security.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Security.obj `if test -f 'Security.cc'; then $(CYGPATH_W) 'Security.cc'; else $(CYGPATH_W) '$(srcdir)/Security.cc'; fi`

apl-StateIndicator.o: StateIndicator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-StateIndicator.o `test -f 'StateIndicator.cc' || echo '$(srcdir)/'`StateIndicator.cc

apl-StateIndicator.obj: StateIndicator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-StateIndicator.obj `if test -f 'StateIndicator.cc'; then $(CYGPATH_W) 'StateIndicator.cc'; else $(CYGPATH_W) '$(srcdir)/StateIndicator.cc'; fi`

apl-Svar_DB.o: Svar_DB.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Svar_DB.o `test -f 'Svar_DB.cc' || echo '$(srcdir)/'`Svar_DB.cc

apl-Svar_DB.obj: Svar_DB.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Svar_DB.obj `if test -f 'Svar_DB.cc'; then $(CYGPATH_W) 'Svar_DB.cc'; else $(CYGPATH_W) '$(srcdir)/Svar_DB.cc'; fi`

apl-Svar_record.o: Svar_record.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Svar_record.o `test -f 'Svar_record.cc' || echo '$(srcdir)/'`Svar_record.cc

apl-Svar_record.obj: Svar_record.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Svar_record.obj `if test -f 'Svar_record.cc'; then $(CYGPATH_W) 'Svar_record.cc'; else $(CYGPATH_W) '$(srcdir)/Svar_record.cc'; fi`

apl-Symbol.o: Symbol.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Symbol.o `test -f 'Symbol.cc' || echo '$(srcdir)/'`Symbol.cc

apl-Symbol.obj: Symbol.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Symbol.obj `if test -f 'Symbol.cc'; then $(CYGPATH_W) 'Symbol.cc'; else $(CYGPATH_W) '$(srcdir)/Symbol.cc'; fi`

apl-SymbolTable.o: SymbolTable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-SymbolTable.o `test -f 'SymbolTable.cc' || echo '$(srcdir)/'`SymbolTable.cc

apl-SymbolTable.obj: SymbolTable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-SymbolTable.obj `if test -f 'SymbolTable.cc'; then $(CYGPATH_W) 'SymbolTable.cc'; else $(CYGPATH_W) '$(srcdir)/SymbolTable.cc'; fi`

apl-SystemVariable.o: SystemVariable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-SystemVariable.o `test -f 'SystemVariable.cc' || echo '$(srcdir)/'`SystemVariable.cc

apl-SystemVariable.obj: SystemVariable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-SystemVariable.obj `if test -f 'SystemVariable.cc'; then $(CYGPATH_W) 'SystemVariable.cc'; else $(CYGPATH_W) '$(srcdir)/SystemVariable.cc'; fi`

apl-TabExpansion.o: TabExpansion.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-TabExpansion.o `test -f 'TabExpansion.cc' || echo '$(srcdir)/'`TabExpansion.cc

apl-TabExpansion.obj: TabExpansion.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-TabExpansion.obj `if test -f 'TabExpansion.cc'; then $(CYGPATH_W) 'TabExpansion.cc'; else $(CYGPATH_W) '$(srcdir)/TabExpansion.cc'; fi`

apl-Thread_context.o: Thread_context.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Thread_context.o `test -f 'Thread_context.cc' || echo '$(srcdir)/'`Thread_context.cc

apl-Thread_context.obj: Thread_context.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Thread_context.obj `if test -f 'Thread_context.cc'; then $(CYGPATH_W) 'Thread_context.cc'; else $(CYGPATH_W) '$(srcdir)/Thread_context.cc'; fi`

apl-Token.o: Token.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Token.o `test -f 'Token.cc' || echo '$(srcdir)/'`Token.cc

apl-Token.obj: Token.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Token.obj `if test -f 'Token.cc'; then $(CYGPATH_W) 'Token.cc'; else $(CYGPATH_W) '$(srcdir)/Token.cc'; fi`

apl-Tokenizer.o: Tokenizer.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Tokenizer.o `test -f 'Tokenizer.cc' || echo '$(srcdir)/'`Tokenizer.cc

apl-Tokenizer.obj: Tokenizer.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Tokenizer.obj `if test -f 'Tokenizer.cc'; then $(CYGPATH_W) 'Tokenizer.cc'; else $(CYGPATH_W) '$(srcdir)/Tokenizer.cc'; fi`

apl-UCS_string.o: UCS_string.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-UCS_string.o `test -f 'UCS_string.cc' || echo '$(srcdir)/'`UCS_string.cc

apl-UCS_string.obj: UCS_string.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-UCS_string.obj `if test -f 'UCS_string.cc'; then $(CYGPATH_W) 'UCS_string.cc'; else $(CYGPATH_W) '$(srcdir)/UCS_string.cc'; fi`

apl-UCS_string_vector.o: UCS_string_vector.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-UCS_string_vector.o `test -f 'UCS_string_vector.cc' || echo '$(srcdir)/'`UCS_string_vector.cc

apl-UCS_string_vector.obj: UCS_string_vector.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-UCS_string_vector.obj `if test -f 'UCS_string_vector.cc'; then $(CYGPATH_W) 'UCS_string_vector.cc'; else $(CYGPATH_W) '$(srcdir)/UCS_string_vector.cc'; fi`

apl-UserFunction.o: UserFunction.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-UserFunction.o `test -f 'UserFunction.cc' || echo '$(srcdir)/'`UserFunction.cc

apl-UserFunction.obj: UserFunction.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-UserFunction.obj `if test -f 'UserFunction.cc'; then $(CYGPATH_W) 'UserFunction.cc'; else $(CYGPATH_W) '$(srcdir)/UserFunction.cc'; fi`

apl-UserFunction_header.o: UserFunction_header.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-UserFunction_header.o `test -f 'UserFunction_header.cc' || echo '$(srcdir)/'`UserFunction_header.cc

apl-UserFunction_header.obj: UserFunction_header.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-UserFunction_header.obj `if test -f 'UserFunction_header.cc'; then $(CYGPATH_W) 'UserFunction_header.cc'; else $(CYGPATH_W) '$(srcdir)/UserFunction_header.cc'; fi`

apl-UserPreferences.o: UserPreferences.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-UserPreferences.o `test -f 'UserPreferences.cc' || echo '$(srcdir)/'`UserPreferences.cc

apl-UserPreferences.obj: UserPreferences.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-UserPreferences.obj `if test -f 'UserPreferences.cc'; then $(CYGPATH_W) 'UserPreferences.cc'; else $(CYGPATH_W) '$(srcdir)/UserPreferences.cc'; fi`

apl-UTF8_string.o: UTF8_string.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-UTF8_string.o `test -f 'UTF8_string.cc' || echo '$(srcdir)/'`UTF8_string.cc

apl-UTF8_string.obj: UTF8_string.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-UTF8_string.obj `if test -f 'UTF8_string.cc'; then $(CYGPATH_W) 'UTF8_string.cc'; else $(CYGPATH_W) '$(srcdir)/UTF8_string.cc'; fi`

apl-Value.o: Value.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Value.o `test -f 'Value.cc' || echo '$(srcdir)/'`Value.cc

apl-Value.obj: Value.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Value.obj `if test -f 'Value.cc'; then $(CYGPATH_W) 'Value.cc'; else $(CYGPATH_W) '$(srcdir)/Value.cc'; fi`

apl-ValueHistory.o: ValueHistory.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-ValueHistory.o `test -f 'ValueHistory.cc' || echo '$(srcdir)/'`ValueHistory.cc

apl-ValueHistory.obj: ValueHistory.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-ValueHistory.obj `if test -f 'ValueHistory.cc'; then $(CYGPATH_W) 'ValueHistory.cc'; else $(CYGPATH_W) '$(srcdir)/ValueHistory.cc'; fi`

apl-Workspace.o: Workspace.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Workspace.o `test -f 'Workspace.cc' || echo '$(srcdir)/'`Workspace.cc

apl-Workspace.obj: Workspace.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Workspace.obj `if test -f 'Workspace.cc'; then $(CYGPATH_W) 'Workspace.cc'; else $(CYGPATH_W) '$(srcdir)/Workspace.cc'; fi`

apl-static_Objects.o: static_Objects.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-static_Objects.o `test -f 'static_Objects.cc' || echo '$(srcdir)/'`static_Objects.cc

apl-static_Objects.obj: static_Objects.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-static_Objects.obj `if test -f 'static_Objects.cc'; then $(CYGPATH_W) 'static_Objects.cc'; else $(CYGPATH_W) '$(srcdir)/static_Objects.cc'; fi`

apl-Regexp.o: Regexp.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Regexp.o `test -f 'Regexp.cc' || echo '$(srcdir)/'`Regexp.cc

apl-Regexp.obj: Regexp.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o apl-Regexp.obj `if test -f 'Regexp.cc'; then $(CYGPATH_W) 'Regexp.cc'; else $(CYGPATH_W) '$(srcdir)/Regexp.cc'; fi`

sql/apl-SqliteArgListBuilder.o: sql/SqliteArgListBuilder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-SqliteArgListBuilder.o `test -f 'sql/SqliteArgListBuilder.cc' || echo '$(srcdir)/'`sql/SqliteArgListBuilder.cc

sql/apl-SqliteArgListBuilder.obj: sql/SqliteArgListBuilder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-SqliteArgListBuilder.obj `if test -f 'sql/SqliteArgListBuilder.cc'; then $(CYGPATH_W) 'sql/SqliteArgListBuilder.cc'; else $(CYGPATH_W) '$(srcdir)/sql/SqliteArgListBuilder.cc'; fi`

sql/apl-SqliteConnection.o: sql/SqliteConnection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-SqliteConnection.o `test -f 'sql/SqliteConnection.cc' || echo '$(srcdir)/'`sql/SqliteConnection.cc

sql/apl-SqliteConnection.obj: sql/SqliteConnection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-SqliteConnection.obj `if test -f 'sql/SqliteConnection.cc'; then $(CYGPATH_W) 'sql/SqliteConnection.cc'; else $(CYGPATH_W) '$(srcdir)/sql/SqliteConnection.cc'; fi`

sql/apl-SqliteResultValue.o: sql/SqliteResultValue.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-SqliteResultValue.o `test -f 'sql/SqliteResultValue.cc' || echo '$(srcdir)/'`sql/SqliteResultValue.cc

sql/apl-SqliteResultValue.obj: sql/SqliteResultValue.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-SqliteResultValue.obj `if test -f 'sql/SqliteResultValue.cc'; then $(CYGPATH_W) 'sql/SqliteResultValue.cc'; else $(CYGPATH_W) '$(srcdir)/sql/SqliteResultValue.cc'; fi`

sql/apl-SqliteProvider.o: sql/SqliteProvider.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-SqliteProvider.o `test -f 'sql/SqliteProvider.cc' || echo '$(srcdir)/'`sql/SqliteProvider.cc

sql/apl-SqliteProvider.obj: sql/SqliteProvider.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-SqliteProvider.obj `if test -f 'sql/SqliteProvider.cc'; then $(CYGPATH_W) 'sql/SqliteProvider.cc'; else $(CYGPATH_W) '$(srcdir)/sql/SqliteProvider.cc'; fi`

sql/apl-Connection.o: sql/Connection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-Connection.o `test -f 'sql/Connection.cc' || echo '$(srcdir)/'`sql/Connection.cc

sql/apl-Connection.obj: sql/Connection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-Connection.obj `if test -f 'sql/Connection.cc'; then $(CYGPATH_W) 'sql/Connection.cc'; else $(CYGPATH_W) '$(srcdir)/sql/Connection.cc'; fi`

sql/apl-PostgresArgListBuilder.o: sql/PostgresArgListBuilder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-PostgresArgListBuilder.o `test -f 'sql/PostgresArgListBuilder.cc' || echo '$(srcdir)/'`sql/PostgresArgListBuilder.cc

sql/apl-PostgresArgListBuilder.obj: sql/PostgresArgListBuilder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-PostgresArgListBuilder.obj `if test -f 'sql/PostgresArgListBuilder.cc'; then $(CYGPATH_W) 'sql/PostgresArgListBuilder.cc'; else $(CYGPATH_W) '$(srcdir)/sql/PostgresArgListBuilder.cc'; fi`

sql/apl-PostgresConnection.o: sql/PostgresConnection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-PostgresConnection.o `test -f 'sql/PostgresConnection.cc' || echo '$(srcdir)/'`sql/PostgresConnection.cc

sql/apl-PostgresConnection.obj: sql/PostgresConnection.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-PostgresConnection.obj `if test -f 'sql/PostgresConnection.cc'; then $(CYGPATH_W) 'sql/PostgresConnection.cc'; else $(CYGPATH_W) '$(srcdir)/sql/PostgresConnection.cc'; fi`

sql/apl-PostgresProvider.o: sql/PostgresProvider.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-PostgresProvider.o `test -f 'sql/PostgresProvider.cc' || echo '$(srcdir)/'`sql/PostgresProvider.cc

sql/apl-PostgresProvider.obj: sql/PostgresProvider.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apl_CXXFLAGS) $(CXXFLAGS) -c -o sql/apl-PostgresProvider.obj `if test -f 'sql/PostgresProvider.cc'; then $(CYGPATH_W) 'sql/PostgresProvider.cc'; else $(CYGPATH_W) '$(srcdir)/sql/PostgresProvider.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf sql/.libs sql/_libs
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f sql/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-pkglibLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-pkgincludeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-pkglibLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-pkgincludeHEADERS \
	uninstall-pkglibLTLIBRARIES

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-pkglibLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-pkglibLTLIBRARIES install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-pkgincludeHEADERS uninstall-pkglibLTLIBRARIES

.PRECIOUS: Makefile


all: ../makefile.h

# normally we would say:
#
# Svar_signals.hh: Svar_signals.def tcp_signal.m4
#
# but what if m4 is missing? So we explicitly 'make update-svar_signals'
# when Svar_signals.def or tcp_signal.m4 have changed (which rarely happens)
#
.PHONY:	update-svar_signals
update-svar_signals:
	m4 -D protocol=Svar_signals tcp_signal.m4 > Svar_signals.hh

apl.lines: apl
	objdump -j .text -l -d $< > $@

test: all
	./apl --id 1010 -T testcases/*tc

test1: all
	./apl --id 1010 --TM 3 -T testcases/*\.tc

test2: all
	./apl --id 1010 --TR -T testcases/*tc

# run testcases related to APs
testAP: all
	./apl --id 1010 -T testcases/AP*tc

perf: apl
	./apl --id 1010 --TM 3 -T testcases/Performance.pt

.PHONY:	patch
patch:
	mkdir -p patches
	svn diff > patches/`date +patch_%F-%R.diff`

.PHONY:	git-pull
git-pull:
	make -C emacs_mode $@
	make -C sql $@

.PHONY:	help
help:
	@echo ""
	@echo ""
	@echo "in addition to standard targets (all, install, clean, ...) "
	@echo "the following make targets may be supported (at this level):"
	@echo ""
	@echo "    make help                    - print this text"
	@echo "    make git-pull                - pull sql and emacs subdirs"
	@echo "    make update-svar_signals     - remake Svar_signals.hh"
	@echo ""

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
