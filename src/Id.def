/*
    This file is part of GNU APL, a free implementation of the
    ISO/IEC Standard 13751, "Programming Language APL, Extended"

    Copyright (C) 2008-2014  Dr. Jürgen Sauermann

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should hste received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

   // to maintain )SAVE / )LOAD compatibility, append new items at the end
   // of their character!


// make Solaris happy
//
#ifdef ES
#undef ES
#endif

//      Id              UCS    = Value    Macro
//---------------------------------------------
id_def( No_ID         , ---  , = 0      , pp )
id_def( No_ID1        , ---  , = 1      , pp )
id_def( No_ID2        , ---  , = 2      , pp )
id_def( No_ID3        , ---  , = 3      , pp )

id_def( AF            , ---  , = 0x4101 , qf )
id_def( AI            , ---  ,          , qv )
id_def( ARG           , ---  ,          , qv )
id_def( F2_AND        , "∧"  ,          , st )
id_def( APL_VALUE1    , ---  ,          , pp )
id_def( APL_VALUE2    , ---  ,          , pp )
id_def( APL_VALUE3    , ---  ,          , pp )
id_def( ASSIGN        , "←"  ,          , st )
id_def( AT            , ---  ,          , qf )
id_def( AV            , ---  ,          , qv )
id_def( ALPHA         , "⍺"  ,          , st )
id_def( ALPHA_U       , "⍶"  ,          , st )

id_def( F12_BINOM     , "!"  , = 0x4201 , st )
id_def( BRANCH        , "→"  ,          , st )

id_def( CHARACTER     , ---  , = 0x4301 , pp )
id_def( F12_CIRCLE    , "○"  ,          , st )
id_def( COLON         , ":"  ,          , st )
id_def( F12_COMMA     , ","  ,          , st )
id_def( F12_COMMA1    , "⍪"  ,          , st )
id_def( OPER1_COMMUTE , "⍨"  ,          , st )
id_def( COMPLEX       , ---  ,          , pp )
id_def( CR            , ---  ,          , qf )
id_def( CT            , ---  ,          , qv )
id_def( CHI           , "χ"  ,          , st )

id_def( F12_DECODE    , "⊥"  , = 0x4401 , st )
id_def( DIAMOND       , "◊"  ,          , st )
id_def( F12_DIVIDE    , "÷"  ,          , st )
id_def( DL            , ---  ,          , qf )
id_def( F12_DOMINO    , "⌹"  ,          , st )
id_def( F12_DROP      , "↓"  ,          , st )

id_def( EA            , ---  , = 0x4501 , qf )
id_def( OPER1_EACH    , "¨"  ,          , st )
id_def( EC            , ---  ,          , qf )
id_def( F12_ELEMENT   , "∈"  ,          , st )
id_def( EM            , ---  ,          , qv )
id_def( F12_ENCODE    , "⊤"  ,          , st )
id_def( END           , ---  ,          , pp )
id_def( ENDL          , ---  ,          , pp )  // last END in line
id_def( ENV           , ---  ,          , qf )
id_def( F2_EQUAL      , "="  ,          , st )
id_def( F12_EQUIV     , "≡"  ,          , st )
id_def( ERROR         , ---  ,          , pp )
id_def( ES            , ---  ,          , qf )
id_def( ESCAPE        , "→"  ,          , st )
id_def( ET            , ---  ,          , qv )
id_def( EX            , ---  ,          , qf )
id_def( F1_EXECUTE    , "⍎"  ,          , st )

id_def( FC            , ---  , = 0x4601 , qv )
id_def( F2_FIND       , "⋸"  ,          , st )
id_def( FIRST_TIME    , ---  ,          , pp )
id_def( F12_FORMAT    , "⍕"  ,          , st )
id_def( FX            , ---  ,          , qf )

id_def( F2_GREATER    , ">"  , = 0x4701 , st )

id_def( F2_INDEX      , "⌷"  , = 0x4901 , st )
id_def( F12_INDEX_OF  , "⍳"  ,          , st )
id_def( INTEGER       , ---  ,          , pp )
id_def( INVALID       , ---  ,          , pp )
id_def( IO            , ---  ,          , qv )
id_def( INP           , ---  ,          , qf )
id_def( F2_INTER      , "∩"  ,          , st )
id_def( OPER2_INNER   , "."  ,          , st )

id_def( JOT           , "∘"  , = 0x4A01 , st )

id_def( L             , ---  , = 0x4C01 , qv )
id_def( L_BRACK       , "["  ,          , st )
id_def( L_CURLY       , "{"  ,          , st )
id_def( L_PARENT      , "("  ,          , st )
id_def( LC            , ---  ,          , qv )
id_def( F2_LEFT       , "⊣"  ,          , st )
id_def( F2_LEQ        , "≤"  ,          , st )
id_def( F2_LESS       , "<"  ,          , st )
id_def( F12_LOGA      , "⍟"  ,          , st )
id_def( LVAL          , ---  ,          , pp )
id_def( LX            , ---  ,          , qv )
id_def( LAMBDA        , "λ"  ,          , st )

id_def( F2_MEQ        , "≥"  , = 0x4D01 , st )
id_def( F12_MINUS     , "-"  ,          , st )

id_def( NA            , ---  , = 0x4E01 , qf )
id_def( F2_NAND       , "⍲"  ,          , st )
id_def( NC            , ---  ,          , qf )
id_def( NL            , ---  ,          , qf )
  /**  ⎕NLT removed                       **/
id_def( NO_VALUE      , ---  , = 0x4E06 , pp )
id_def( F2_NOR        , "⍱"  ,          , st )
id_def( F12_NEQUIV    , "≢"  ,          , st )
id_def( OFF           , ---  , = 0x4F01 , pp )
id_def( F2_OR         , "∨"  ,          , st )
id_def( OMEGA         , "⍵"  ,          , st )
id_def( OMEGA_U       , "⍹"  ,          , st )
id_def( OPER2_OUTER   , "∘." ,          , st )

id_def( F12_PARTITION , "⊂"  , = 0x5001 , st )
id_def( F12_PICK      , "⊃"  ,          , st )
id_def( F12_PLUS      , "+"  ,          , st )
id_def( F12_POWER     , "⋆"  ,          , st )
id_def( PP            , ---  ,          , qv )
id_def( PR            , ---  ,          , qv )
id_def( PS            , ---  ,          , qv )
id_def( PT            , ---  ,          , qv )
  /**  OPER2_PRODUCT removed              **/
id_def( PW            , ---  , = 0x5009 , qv )
id_def( OPER2_POWER   , "⍣"  ,          , st )

id_def( Quad_Quad     , "⎕"  , = 0x5101 , st )
id_def( QUOTE1        , "'"  ,          , st )
id_def( QUOTE2        , "\"" ,          , st )
id_def( QUOTE_Quad    , "⍞"  ,          , st )

id_def( R             , ---  , = 0x5201 , qv )
id_def( R_ARROW       , "→"  ,          , st )
id_def( R_BRACK       , "]"  ,          , st )
id_def( R_CURLY       , "}"  ,          , st )
id_def( R_PARENT      , ")"  ,          , st )
id_def( OPER2_RANK    , "⍤"  ,          , st )
id_def( REAL          , ---  ,          , pp )
id_def( OPER1_REDUCE  , "/"  ,          , st )
id_def( OPER1_REDUCE1 , "⌿"  ,          , st )
id_def( RETURN_EXEC   , ---  ,          , pp )   // ⍎X
id_def( RETURN_STATS  , ---  ,          , pp )   // A ◊ B ◊ C
id_def( RETURN_SYMBOL , ---  ,          , pp )   // Z←A FUN B
id_def( RETURN_VOID   , ---  ,          , pp )   // A FUN B
id_def( F12_RHO       , "⍴"  ,          , st )
id_def( F2_RIGHT      , "⊢"  ,          , st )
id_def( RL            , ---  ,          , qv )
id_def( F12_RND_DN    , "⌊"  ,          , st )
id_def( F12_RND_UP    , "⌈"  ,          , st )
id_def( F12_ROLL      , "?"  ,          , st )
id_def( F12_ROTATE    , "⌽"  ,          , st )
id_def( F12_ROTATE1   , "⊖"  ,          , st )

id_def( OPER1_SCAN    , "\\" , = 0x5301 , st )
id_def( OPER1_SCAN1   , "⍀"  ,          , st )
id_def( SEMICOL       , ";"  ,          , st )
id_def( SI            , ---  ,          , qf )
id_def( SI_PUSHED     , ---  ,          , pp )
id_def( SI_EVAL_ERR   , ---  ,          , pp )
id_def( F12_SORT_ASC  , "⍋"  ,          , st )
id_def( F12_SORT_DES  , "⍒"  ,          , st )
id_def( SPACE         , " "  ,          , st )
id_def( F12_STILE     , "∣"  ,          , st )
id_def( SVC           , ---  ,          , qf )
id_def( SVE           , ---  ,          , qv )
id_def( SVO           , ---  ,          , qf )
id_def( SVQ           , ---  ,          , qf )
id_def( SVR           , ---  ,          , qf )
id_def( SVS           , ---  ,          , qf )
id_def( SYL           , ---  ,          , qv )
id_def( USER_SYMBOL   , ---  ,          , pp )
id_def( STOP_LINE     , ---  ,          , pp )
id_def( STOP          , ---  ,          , qf )

id_def( F12_TAKE      , "↑"  , = 0x5401 , st )
id_def( TC            , ---  ,          , qv )
id_def( TF            , ---  ,          , qf )
id_def( F12_TIMES     , "×"  ,          , st )
id_def( F12_TRANSPOSE , "⍉"  ,          , st )
id_def( TS            , ---  ,          , qv )
id_def( TZ            , ---  ,          , qv )
id_def( TRACE         , ---  ,          , qf )

id_def( UCS           , ---  , = 0x5501 , qf )
id_def( UL            , ---  ,          , qv )
id_def( F2_UNEQ       , "≠"  ,          , st )
id_def( F12_UNION     , "∪"  ,          , st )
id_def( FUN_USER      , ---  ,          , pp )

id_def( VARIABLE      , ---  , = 0x5601 , pp )
id_def( VOID          , ---  ,          , pp )

id_def( WA            , ---  , = 0x5701 , qv )
id_def( F12_WITHOUT   , "∼"  ,          , st )
id_def( X             , ---  , = 0x5801 , qv )

id_def( F0_ZILDE      , "⍬"  , = 0x5A01 , st )

//-----------------------------------------------------------------------------

#undef id_def
#undef pp
#undef qf
#undef qv
#undef st

