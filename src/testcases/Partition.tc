⍝ Partition.tc
⍝ ----------------------------------

      4 ⎕CR 1 1 2⊂'ABC'   ⍝ partition a string
┏→━━━━━━━┓
┃┏→━┓ ┏→┓┃
┃┃AB┃ ┃C┃┃
┃┗━━┛ ┗━┛┃
┗ϵ━━━━━━━┛

      4 ⎕CR 1 0 1⊂'ABC'   ⍝ partition and delete
┏→━━━━━━┓
┃┏→┓ ┏→┓┃
┃┃A┃ ┃C┃┃
┃┗━┛ ┗━┛┃
┗ϵ━━━━━━┛

      1 0 1⊂'ABCD'   ⍝ mismatch of argument lengths
LENGTH ERROR+
      1 0 1⊂'ABCD'
      ^    ^

      →

      4⎕CR 1 1 2⊂'ABC'
┏→━━━━━━━┓
┃┏→━┓ ┏→┓┃
┃┃AB┃ ┃C┃┃
┃┗━━┛ ┗━┛┃
┗ϵ━━━━━━━┛


      4⎕CR 1 0 1⊂'ABC'
┏→━━━━━━┓
┃┏→┓ ┏→┓┃
┃┃A┃ ┃C┃┃
┃┗━┛ ┗━┛┃
┗ϵ━━━━━━┛

      1 0 1⊂'ABCD'
LENGTH ERROR+
      1 0 1⊂'ABCD'
      ^    ^

      →

      4⎕CR 2 1 2⊂10 20 30
┏→━━━━━━━━━━━┓
┃┏→━━━━┓ ┏→━┓┃
┃┃10 20┃ ┃30┃┃
┃┗━━━━━┛ ┗━━┛┃
┗ϵ━━━━━━━━━━━┛

      OTB←'ONE' 'TWO' 'BUCKLE MY SHOE'
      4⎕CR OTB
┏→━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃┏→━━┓ ┏→━━┓ ┏→━━━━━━━━━━━━━┓┃
┃┃ONE┃ ┃TWO┃ ┃BUCKLE MY SHOE┃┃
┃┗━━━┛ ┗━━━┛ ┗━━━━━━━━━━━━━━┛┃
┗ϵ━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

      4⎕CR 1 1 2⊂OTB
┏→━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃┏→━━━━━━━━━━┓ ┏→━━━━━━━━━━━━━━━┓┃
┃┃┏→━━┓ ┏→━━┓┃ ┃┏→━━━━━━━━━━━━━┓┃┃
┃┃┃ONE┃ ┃TWO┃┃ ┃┃BUCKLE MY SHOE┃┃┃
┃┃┗━━━┛ ┗━━━┛┃ ┃┗━━━━━━━━━━━━━━┛┃┃
┃┗ϵ━━━━━━━━━━┛ ┗ϵ━━━━━━━━━━━━━━━┛┃
┗ϵϵ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

      X←'  A STITCH  IN TIME   '
      4⎕CR X
┏→━━━━━━━━━━━━━━━━━━━━━┓
┃  A STITCH  IN TIME   ┃
┗━━━━━━━━━━━━━━━━━━━━━━┛

      4⎕CR (' '≠X)⊂X
┏→━━━━━━━━━━━━━━━━━━━━━━━┓
┃┏→┓ ┏→━━━━━┓ ┏→━┓ ┏→━━━┓┃
┃┃A┃ ┃STITCH┃ ┃IN┃ ┃TIME┃┃
┃┗━┛ ┗━━━━━━┛ ┗━━┛ ┗━━━━┛┃
┗ϵ━━━━━━━━━━━━━━━━━━━━━━━┛

      4⎕CR (1+' '≠X)⊂X
┏→━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃┏→━┓ ┏→━┓ ┏→━━━━━━━┓ ┏→━━┓ ┏→━━━━━━┓┃
┃┃  ┃ ┃A ┃ ┃STITCH  ┃ ┃IN ┃ ┃TIME   ┃┃
┃┗━━┛ ┗━━┛ ┗━━━━━━━━┛ ┗━━━┛ ┗━━━━━━━┛┃
┗ϵ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

      4⎕CR (1+' '=X)⊂X
┏→━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃┏→━━┓ ┏→━━━━━━┓ ┏→━━━┓ ┏→━━━━┓ ┏→━━┓┃
┃┃  A┃ ┃ STITCH┃ ┃  IN┃ ┃ TIME┃ ┃   ┃┃
┃┗━━━┛ ┗━━━━━━━┛ ┗━━━━┛ ┗━━━━━┛ ┗━━━┛┃
┗ϵ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

      M←3 12ρ'1   10 3.1422  100 6.2833 1000 9.425'
      4⎕CR M
┏→━━━━━━━━━━━┓
↓1   10 3.142┃
┃2  100 6.283┃
┃3 1000 9.425┃
┗━━━━━━━━━━━━┛

      ⊢P←(∼∧⌿' '=M)
1 0 1 1 1 1 0 1 1 1 1 1
      4⎕CR P ⊂ M
┏→━━━━━━━━━━━━━━━━━┓
↓┏→┓ ┏→━━━┓ ┏→━━━━┓┃
┃┃1┃ ┃  10┃ ┃3.142┃┃
┃┗━┛ ┗━━━━┛ ┗━━━━━┛┃
┃┏→┓ ┏→━━━┓ ┏→━━━━┓┃
┃┃2┃ ┃ 100┃ ┃6.283┃┃
┃┗━┛ ┗━━━━┛ ┗━━━━━┛┃
┃┏→┓ ┏→━━━┓ ┏→━━━━┓┃
┃┃3┃ ┃1000┃ ┃9.425┃┃
┃┗━┛ ┗━━━━┛ ┗━━━━━┛┃
┗ϵ━━━━━━━━━━━━━━━━━┛

      ⍝ Regression

      ⍝ Scalar L
      ⍝ +/ 2</ 0, Lext is the number of partitions
      ⍝
      L←42 ◊ R←'abc'
      Lext←(¯1↑⍴R)⍴L   ⍝ 42 42 42
      PCnt← +/ 2 </ 0,Lext   ⍝ partition count = number of L↑
      Z←L⊂R
      (⍴⍴Z) ≡ (⍴⍴R)
1
      (⍴Z) ≡ ((¯1↓⍴R), PCnt)
1
      (≡Z) ≡ (1+≡R)
1
      ((0 ≠ L)/R) ≡ (⊃,/L⊂R)
1
      8 ⎕CR Z
┌→────┐
│┌→──┐│
││abc││
│└───┘│
└ϵ────┘

      ⍝ same as above, but with Scalar L extended to (⍴R)⍴L
      ⍝ result shall be the same.
      ⍝
      ⊢L←Lext
42 42 42
      PCnt← +/ 2 </ 0,L   ⍝ partition count = number of L↑
      Z←L⊂R
      (⍴⍴Z) ≡ (⍴⍴R)
1
      (⍴Z) ≡ ((¯1↓⍴R), PCnt)
1
      (≡Z) ≡ (1+≡R)
1
      8 ⎕CR Z
┌→────┐
│┌→──┐│
││abc││
│└───┘│
└ϵ────┘

      ⍝ partition with axis
      ⍝
      L←1 0 1 0  ◊ R←4 4⍴⍳16   ⍝ ↑L ≠ 0
      Z←L ⊂[1] R
      8 ⎕CR Z
┌→─────────────────┐
↓┌→┐ ┌→┐  ┌→┐  ┌→┐ │
││1│ │2│  │3│  │4│ │
│└─┘ └─┘  └─┘  └─┘ │
│┌→┐ ┌→─┐ ┌→─┐ ┌→─┐│
││9│ │10│ │11│ │12││
│└─┘ └──┘ └──┘ └──┘│
└ϵ─────────────────┘

      L←0 1 0 1  ◊ R←4 4⍴⍳16   ⍝ ↑L = 0
      Z←L ⊂[1] R
      8 ⎕CR Z
┌→──────────────────┐
↓┌→┐  ┌→┐  ┌→┐  ┌→┐ │
││5│  │6│  │7│  │8│ │
│└─┘  └─┘  └─┘  └─┘ │
│┌→─┐ ┌→─┐ ┌→─┐ ┌→─┐│
││13│ │14│ │15│ │16││
│└──┘ └──┘ └──┘ └──┘│
└ϵ──────────────────┘


⍝ Regression. Hudson Lacerda June 2, 2022

      L←1 0 1 0 ◊ R←'abcd'
      ⊢PCnt← +/ 2 </ 0,L   ⍝ partition count = number of L↑
2
      Z←L⊂R
      (⍴⍴Z) ≡ (⍴⍴R)
1
      (⍴Z) ≡ ((¯1↓⍴R), PCnt)
1
      (≡Z) ≡ (1+≡R)
1
      (⎕← (0≠L)/R )≡(⎕← ⊃,/Z )
ac
ac
1

      L←1 1 1 0 ◊ R←'abcd'
      ⊢PCnt← +/ 2 </ 0,L   ⍝ partition count = number of L↑
1
      Z←L⊂R
      (⍴⍴Z) ≡ (⍴⍴R)
1
      (⍴Z) ≡ ((¯1↓⍴R), PCnt)
1
      (≡Z) ≡ (1+≡R)
1
      (⎕← (0≠L)/R )≡(⎕← ⊃,/Z )
abc
abc
1

      L←0 0 1 0 ◊ R←'abcd'
      ⊢PCnt← +/ 2 </ 0,L   ⍝ partition count = number of L↑
1
      Z←L⊂R
      (⎕← (0≠L)/R )≡(⎕← ⊃,/Z )
c
c
1

⍝ ==================================

      )SI

      )CHECK
OK      - no stale functions
OK      - no stale values
OK      - no stale indices
OK      - no duplicate parents

